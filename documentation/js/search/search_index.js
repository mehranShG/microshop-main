var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/modules/AppModule.html",[0,1.3,1,2.175]],["body/modules/AppModule.html",[0,1.588,1,4.123,2,1.3,3,1.855,4,2.381,5,2.381,6,3.36,7,0.029,8,3.36,9,3.36,10,3.36,11,2.193,12,1.537,13,1.537,14,0.262,15,0.262,16,0.231,17,2.833,18,2.802,19,0.653,20,3.398,21,2.833,22,0.662,23,4.042,24,5.139,25,2.381,26,4.042,27,2.381,28,2.381,29,1.685,30,1.862,31,1.3,32,2.833,33,1.855,34,2.381,35,1.685,36,1.368,37,1.862,38,2.193,39,2.833,40,2.833,41,2.833,42,2.833,43,2.833,44,4.042,45,2.802,46,2.833,47,2.833,48,2.833,49,2.833,50,0.329,51,2.833,52,2.833,53,2.833,54,2.833,55,2.833,56,1.685,57,2.833,58,1.685,59,2.833,60,2.833,61,2.833,62,1.685,63,2.833,64,2.381,65,1.685,66,2.833,67,2.833,68,0.262,69,0.012,70,0.017,71,0.017]],["title/controllers/AuthController.html",[72,1.041,73,2.175]],["body/controllers/AuthController.html",[7,0.029,14,0.228,15,0.228,16,0.201,19,0.619,22,0.576,33,2.209,34,2.074,35,1.467,36,1.237,37,1.622,50,0.506,68,0.228,69,0.01,70,0.016,71,0.016,72,0.776,73,2.403,74,0.899,75,2.074,76,1.338,77,1.815,78,0.257,79,1.333,80,1.587,81,4.048,82,3.655,83,4.048,84,3.073,85,1.213,86,2.467,87,3.655,88,0.747,89,2.467,90,1.755,91,2.681,92,3.655,93,1.097,94,2.074,95,3.655,96,2.467,97,1.474,98,1.753,99,1.097,100,0.67,101,2.467,102,2.863,103,2.467,104,3.655,105,2.467,106,2.467,107,3.539,108,2.467,109,3.655,110,2.467,111,3.661,112,1.815,113,1.132,114,2.074,115,1.467,116,2.074,117,1.622,118,3.782,119,1.622,120,1.467,121,0.835,122,2.074,123,2.467,124,2.168,125,1.815,126,2.467,127,2.467,128,1.228,129,1.046,130,2.467,131,2.467,132,1.436,133,1.338,134,1.677,135,2.074,136,2.467,137,2.074,138,2.467,139,2.467,140,2.467,141,2.467,142,1.755,143,2.467,144,2.467,145,2.467,146,2.467,147,2.467,148,2.467,149,2.467]],["title/entities/AuthEntity.html",[36,1.12,150,1.648]],["body/entities/AuthEntity.html",[7,0.029,14,0.212,15,0.212,16,0.186,19,0.433,33,2.627,35,1.36,36,1.169,38,2.515,45,3.779,50,0.698,56,2.475,62,1.36,68,0.212,69,0.009,70,0.015,71,0.015,77,1.682,78,0.238,85,1.514,88,0.932,93,0.87,100,1.13,150,1.719,151,1.922,152,1.086,153,3.061,154,4.161,155,2.475,156,3.061,157,3.061,158,3.498,159,3.061,160,3.498,161,4.161,162,2.412,163,4.977,164,2.287,165,2.287,166,3.453,167,4.636,168,3.898,169,2.287,170,2.287,171,3.411,172,3.061,173,2.287,174,2.287,175,2.287,176,2.287,177,3.061,178,2.287,179,2.287,180,2.287,181,2.541,182,3.453,183,2.287,184,2.287,185,2.287,186,3.061,187,2.287,188,4.212,189,2.287,190,3.453,191,3.453,192,3.453,193,1.139,194,2.287,195,1.922,196,4.977]],["title/modules/AuthModule.html",[0,1.3,6,1.968]],["body/modules/AuthModule.html",[0,1.832,2,1.598,3,2.14,6,3.717,7,0.029,11,2.53,12,1.89,13,1.89,14,0.322,15,0.322,16,0.284,18,2.071,19,0.659,22,0.814,30,2.289,31,1.598,33,2.14,35,2.071,36,1.179,65,2.773,68,0.322,69,0.014,70,0.02,71,0.02,73,3.455,74,1.7,124,2.999,125,2.563,197,2.928,198,2.928,199,3.582,200,3.483,201,3.92,202,2.928,203,2.289,204,2.289,205,3.483,206,2.563,207,3.483,208,2.928,209,2.563,210,3.483,211,3.483,212,2.928]],["title/entities/AuthPass.html",[33,1.519,150,1.648]],["body/entities/AuthPass.html",[7,0.028,14,0.316,15,0.316,16,0.278,19,0.479,33,2.111,50,0.647,58,3.311,62,2.03,68,0.316,69,0.014,70,0.02,71,0.02,78,0.355,80,1.245,85,1.403,88,0.864,93,1.159,100,1.412,132,1.342,150,2.291,152,1.447,162,2.045,171,4.097,172,3.828,177,3.828,186,3.828,188,3.828,193,1.7,203,3.821,213,2.87,214,4.374,215,4.374,216,3.414,217,3.414,218,3.414,219,3.414,220,3.385,221,4.601,222,4.601,223,3.414,224,4.601,225,2.111,226,3.414,227,3.414,228,3.414]],["title/injectables/AuthService.html",[124,1.648,229,1.207]],["body/injectables/AuthService.html",[7,0.029,14,0.174,15,0.174,16,0.153,19,0.562,22,0.438,31,0.86,36,1.635,37,1.232,45,2.184,50,0.485,56,1.115,58,2.481,68,0.174,69,0.008,70,0.013,71,0.013,78,0.195,79,1.08,80,1.967,81,3.507,83,3.507,84,2.49,88,0.705,90,1.911,91,2.405,93,0.925,97,1.413,98,1.312,99,1.051,100,1.311,102,2.872,111,3.087,112,1.379,113,2.085,116,2.49,122,1.576,124,1.475,129,1.257,132,1.785,133,1.607,134,1.685,135,1.576,137,1.576,142,1.844,155,2.481,193,0.934,206,1.379,208,2.49,220,2.179,225,1.915,229,1.08,230,1.017,231,1.576,232,2.963,233,1.607,234,1.379,235,3.069,236,5.057,237,1.875,238,2.179,239,2.963,240,1.875,241,2.49,242,2.963,243,1.875,244,2.49,245,2.963,246,2.963,247,2.963,248,1.875,249,2.179,250,4.172,251,2.963,252,1.875,253,2.963,254,2.963,255,1.875,256,1.875,257,2.963,258,2.49,259,1.379,260,1.379,261,1.379,262,1.947,263,2.414,264,1.875,265,1.875,266,2.702,267,1.829,268,2.963,269,1.875,270,1.875,271,2.963,272,2.963,273,2.702,274,1.875,275,1.875,276,1.576,277,2.49,278,2.179,279,1.875,280,2.963,281,1.875,282,2.49,283,1.875,284,2.963,285,1.875,286,2.49,287,2.49,288,1.875,289,2.963,290,1.875]],["title/classes/CreateDto.html",[69,0.014,291,1.796]],["body/classes/CreateDto.html",[7,0.028,14,0.343,15,0.343,16,0.302,19,0.506,50,0.63,68,0.45,69,0.022,70,0.021,71,0.021,78,0.386,85,1.225,88,0.841,93,1.45,99,1.225,100,1.007,121,1.256,152,1.529,162,2.409,291,2.637,292,1.573,293,2.728,294,4.234,295,4.234,296,4.234,297,4.086,298,3.709,299,3.709,300,3.709,301,3.118,302,3.927,303,2.012,304,3.242,305,1.847]],["title/injectables/JwtStrategy.html",[199,1.968,229,1.207]],["body/injectables/JwtStrategy.html",[7,0.029,14,0.313,15,0.313,16,0.275,19,0.603,22,0.79,50,0.531,56,2.01,68,0.313,69,0.014,70,0.019,71,0.019,78,0.352,79,1.666,80,1.888,88,0.709,90,1.232,91,2.276,97,1.547,98,1.437,99,1.151,124,2.973,125,2.487,128,1.683,129,1.434,132,1.328,133,2.809,134,1.551,142,1.232,199,2.718,201,3.842,202,2.842,212,2.842,225,1.551,229,1.666,230,1.834,233,1.834,258,3.842,276,2.842,282,3.842,306,2.842,307,3.381,308,3.381,309,4.57,310,3.381,311,2.487,312,3.381,313,3.381,314,2.842,315,2.487,316,3.381,317,2.842,318,3.381,319,3.381,320,3.381,321,3.381,322,3.381,323,3.381,324,3.381,325,3.381,326,3.381]],["title/classes/LoginDto.html",[69,0.014,102,1.968]],["body/classes/LoginDto.html",[7,0.028,14,0.379,15,0.379,16,0.333,19,0.539,50,0.601,58,3.378,68,0.379,69,0.021,70,0.022,71,0.022,78,0.426,85,1.305,88,0.804,102,3.079,121,1.385,152,1.629,155,3.378,162,2.346,292,1.735,302,3.403,303,2.22,304,3.082,327,3.439,328,3.439,329,4.091,330,4.091,331,4.091,332,4.353,333,3.439,334,3.439]],["title/classes/OrderDto.html",[69,0.014,335,1.968]],["body/classes/OrderDto.html",[7,0.028,14,0.357,15,0.357,16,0.314,19,0.402,50,0.679,68,0.357,69,0.016,70,0.021,71,0.021,78,0.402,85,1.472,88,0.907,93,1.562,121,1.307,152,1.57,162,1.961,292,1.638,304,3.504,335,2.968,336,3.246,337,4.648,338,4.648,339,4.648,340,4.648,341,3.861,342,3.861,343,3.861,344,3.861]],["title/controllers/OrdersController.html",[72,1.041,345,2.175]],["body/controllers/OrdersController.html",[7,0.029,14,0.34,15,0.34,16,0.299,19,0.597,22,0.857,50,0.426,68,0.34,69,0.015,70,0.02,71,0.02,72,1.154,74,1.338,76,1.991,78,0.382,79,1.76,85,1.216,88,0.749,90,1.76,97,1.242,98,1.154,99,0.924,115,2.182,117,3.545,120,2.182,121,1.242,128,1.827,129,1.556,142,1.76,158,3.084,181,3.551,335,3.635,345,3.172,346,3.084,347,4.818,348,3.669,349,3.084,350,3.669,351,3.084,352,2.927,353,3.084,354,3.669,355,3.669,356,3.669,357,3.669,358,3.669]],["title/entities/OrdersEntity.html",[38,1.796,150,1.648]],["body/entities/OrdersEntity.html",[7,0.029,14,0.262,15,0.262,16,0.23,19,0.42,36,1.738,38,2.189,50,0.712,62,1.68,68,0.262,69,0.012,70,0.017,71,0.017,77,3.993,78,0.294,85,1.523,88,0.938,93,1.497,100,1.277,150,2.009,152,1.269,162,1.585,168,3.391,171,3.776,172,3.462,177,3.462,186,3.462,188,4.448,193,1.407,214,3.955,215,3.955,337,3.955,338,3.955,339,3.955,340,3.955,359,2.375,360,4.705,361,2.825,362,4.034,363,4.034,364,2.825,365,2.825,366,2.825,367,3.391,368,2.825,369,4.034,370,2.825,371,2.825,372,4.034,373,2.825,374,2.825,375,2.825,376,2.825,377,2.825,378,4.034,379,2.825,380,2.078]],["title/modules/OrdersModule.html",[0,1.3,8,1.968]],["body/modules/OrdersModule.html",[0,2,2,1.826,3,2.335,7,0.028,8,3.716,11,2.761,12,2.16,13,2.16,14,0.368,15,0.368,16,0.324,18,2.367,19,0.636,22,0.93,30,2.616,31,1.826,36,1.348,65,3.026,68,0.368,69,0.016,70,0.022,71,0.022,74,1.855,204,2.616,209,2.928,345,3.687,352,3.39,353,3.346,381,3.346,382,3.346,383,3.98,384,3.98]],["title/injectables/OrdersService.html",[229,1.207,352,1.796]],["body/injectables/OrdersService.html",[7,0.029,14,0.274,15,0.274,16,0.241,19,0.597,22,0.692,31,1.36,36,1.003,38,2.264,50,0.485,68,0.274,69,0.012,70,0.018,71,0.018,78,0.309,79,1.521,80,2.09,88,0.75,90,1.521,97,1.413,98,1.312,99,1.051,100,1.311,129,1.257,132,2.06,133,2.621,134,1.36,142,1.521,181,3.553,193,1.475,204,1.947,225,2.216,229,1.521,230,1.608,233,2.264,234,2.18,235,3.857,238,3.07,259,2.18,261,2.18,262,1.947,267,2.078,278,2.18,315,2.18,335,3.286,347,4.408,349,3.508,351,2.491,352,2.264,385,2.491,386,2.963,387,2.963,388,2.743,389,2.963,390,2.963,391,2.963,392,4.173,393,2.963,394,2.963,395,2.963,396,2.963,397,2.963,398,2.963,399,2.963,400,2.963,401,2.963,402,2.963,403,2.963,404,2.963]],["title/classes/Product.html",[69,0.014,405,1.648]],["body/classes/Product.html",[7,0.028,14,0.308,15,0.308,16,0.271,19,0.346,29,1.978,45,3.678,50,0.706,68,0.475,69,0.014,70,0.019,71,0.019,78,0.346,85,1.388,88,0.855,93,1.497,99,1.388,100,1.394,132,1.307,152,1.422,162,2.165,195,4.631,292,1.411,294,3.777,295,3.777,296,3.777,380,2.447,405,2.557,406,2.186,407,4.52,408,3.326,409,3.326,410,4.52,411,3.326,412,5.942,413,3.326,414,3.326,415,3.8,416,3.326,417,2.447,418,3.326,419,4.52,420,2.186,421,2.796]],["title/controllers/ProductController.html",[72,1.041,422,2.175]],["body/controllers/ProductController.html",[7,0.029,14,0.229,15,0.229,16,0.201,19,0.536,22,0.578,50,0.56,68,0.229,69,0.01,70,0.016,71,0.016,72,0.778,74,0.902,76,1.342,78,0.258,79,1.335,80,2.227,85,1.296,88,0.799,90,1.876,93,1.473,97,1.632,98,1.516,99,1.214,100,1.463,115,2.178,117,2.866,120,1.471,121,0.837,128,1.231,132,1.713,134,1.135,142,1.876,225,1.68,263,1.625,267,2.4,291,2.792,305,2.4,388,3.168,405,2.851,422,2.407,423,2.079,424,2.079,425,2.694,426,3.546,427,3.078,428,3.662,429,3.662,430,1.819,431,2.473,432,2.473,433,2.079,434,3.078,435,2.473,436,2.473,437,3.662,438,2.473,439,2.473,440,3.662,441,2.473,442,1.819,443,1.625,444,1.819,445,1.819,446,2.171,447,1.819,448,2.473,449,2.473,450,2.079,451,2.473,452,2.079,453,2.079,454,2.079,455,2.079,456,2.079,457,2.079,458,2.079,459,2.079,460,2.079,461,2.473,462,2.473,463,2.473,464,2.473,465,2.079]],["title/controllers/ProductMicroController.html",[72,1.041,466,2.175]],["body/controllers/ProductMicroController.html",[7,0.029,14,0.214,15,0.214,16,0.188,19,0.52,20,1.939,22,0.539,50,0.541,68,0.214,69,0.01,70,0.015,71,0.015,72,0.726,74,0.841,76,1.252,78,0.24,79,1.267,80,2.093,85,1.259,88,0.775,90,1.822,93,1.323,97,1.577,98,1.806,99,1.173,100,0.944,115,1.372,117,2.285,118,3.864,119,1.516,128,1.149,132,1.83,134,1.595,142,1.822,225,1.595,267,2.319,291,2.711,305,2.319,311,1.697,388,2.75,405,2.319,425,2.558,426,3.426,430,1.697,434,1.939,442,2.558,443,2.285,444,1.697,446,2.083,447,1.697,450,1.939,452,1.939,453,1.939,454,1.939,455,1.939,456,1.939,457,1.939,458,1.939,459,1.939,460,1.939,465,1.939,466,2.285,467,4.415,468,1.697,469,2.307,470,3.477,471,3.477,472,3.477,473,2.307,474,3.477,475,2.307,476,2.307,477,3.477,478,2.307,479,3.477,480,2.307,481,3.477,482,2.307,483,3.477,484,2.307,485,3.477,486,2.307,487,3.477,488,4.184,489,2.307,490,3.477,491,2.307,492,2.307,493,2.307,494,2.307,495,2.307,496,2.307,497,2.307,498,2.307,499,2.307,500,2.307,501,2.307,502,2.307]],["title/modules/ProductModule.html",[0,1.3,9,1.968]],["body/modules/ProductModule.html",[0,1.924,2,1.72,3,2.246,7,0.029,9,3.657,11,2.656,12,2.034,13,2.034,14,0.347,15,0.347,16,0.305,18,2.229,19,0.64,22,0.876,28,3.152,29,2.229,65,2.911,68,0.347,69,0.015,70,0.021,71,0.021,74,1.785,98,1.179,405,2.437,415,3.152,420,3.218,422,3.583,445,2.758,446,3.062,447,2.758,466,3.583,503,3.152,504,3.152,505,3.749,506,3.152,507,3.749,508,3.749,509,3.749]],["title/injectables/ProductService.html",[229,1.207,446,1.648]],["body/injectables/ProductService.html",[7,0.029,14,0.144,15,0.144,16,0.127,19,0.462,22,0.363,29,0.925,50,0.515,64,1.308,68,0.144,69,0.006,70,0.011,71,0.011,78,0.162,79,0.929,80,2.149,88,0.727,90,1.986,91,2.595,93,1.373,97,1.503,98,1.396,99,1.118,100,1.585,129,1.081,132,1.922,134,1.896,142,1.783,225,2.449,229,0.929,230,0.844,233,1.383,241,2.143,244,2.143,262,1.675,263,2.917,267,2.436,305,1.864,388,1.022,405,3.105,417,1.144,424,2.143,425,1.875,426,3.599,427,2.143,430,1.875,433,2.143,442,2.755,444,1.144,445,1.144,446,1.269,510,1.308,511,2.549,512,3.745,513,1.556,514,3.474,515,3.238,516,3.745,517,1.556,518,2.549,519,1.556,520,2.549,521,2.549,522,1.556,523,2.549,524,1.556,525,1.556,526,1.556,527,2.549,528,1.556,529,1.308,530,1.308,531,1.556,532,1.556,533,1.556,534,1.556,535,1.556,536,1.556,537,1.556,538,4.438,539,2.549,540,2.549,541,1.556,542,2.549,543,2.549,544,3.745,545,3.238,546,3.238,547,3.745,548,3.238,549,1.556,550,2.549,551,3.238,552,1.556,553,3.238,554,3.745,555,3.745,556,3.745,557,3.745,558,1.556,559,1.556,560,1.556,561,1.556,562,2.549,563,2.549,564,2.549,565,1.556,566,1.556]],["title/classes/RegisterDto.html",[69,0.014,107,2.175]],["body/classes/RegisterDto.html",[7,0.028,14,0.313,15,0.313,16,0.275,19,0.476,50,0.601,56,3.445,58,3.445,68,0.313,69,0.019,70,0.019,71,0.019,78,0.352,85,1.304,88,0.803,107,3.004,121,1.144,152,1.437,155,3.079,162,2.346,292,1.434,302,3.403,303,1.834,304,3.009,328,2.842,332,3.842,333,2.842,334,3.842,567,2.842,568,3.381,569,3.381,570,5.546,571,4.662,572,4.57,573,4.57,574,4.57,575,4.57,576,4.57,577,3.381,578,3.381,579,4.57,580,4.57,581,3.381,582,2.842,583,3.381,584,4.57,585,3.381,586,3.381]],["title/classes/ResponseModel.html",[69,0.014,113,1.519]],["body/classes/ResponseModel.html",[7,0.028,14,0.355,15,0.355,16,0.312,50,0.677,68,0.355,69,0.016,70,0.021,71,0.021,78,0.399,88,0.904,93,1.521,97,1.298,98,1.205,99,0.966,113,2.279,152,1.562,233,2.079,266,4.442,267,3.135,273,4.632,292,1.626,367,5.075,587,3.222,588,4.966,589,4.966,590,3.833,591,3.833,592,3.833,593,3.833,594,3.833]],["title/classes/UpdateDto.html",[69,0.014,305,1.648]],["body/classes/UpdateDto.html",[7,0.028,14,0.333,15,0.333,16,0.293,19,0.496,50,0.66,68,0.441,69,0.022,70,0.02,71,0.02,78,0.374,85,1.199,88,0.882,93,1.49,99,1.432,100,1.449,121,1.216,152,1.497,162,2.388,291,1.949,292,1.524,293,2.643,294,4.181,295,4.181,296,4.181,297,4.001,301,3.02,302,3.886,303,1.949,304,3.208,305,2.37,595,3.592,596,3.592,597,3.592,598,3.592]],["title/classes/UpdateProfileDto.html",[69,0.014,599,1.968]],["body/classes/UpdateProfileDto.html",[7,0.028,14,0.305,15,0.305,16,0.268,19,0.468,50,0.637,68,0.305,69,0.019,70,0.019,71,0.019,78,0.343,85,1.382,88,0.851,99,1.555,121,1.115,152,1.412,153,3.759,156,3.759,157,3.759,159,3.759,162,2.425,292,1.397,303,1.787,304,3.349,571,3.775,582,2.769,599,2.67,600,4.827,601,2.769,602,3.294,603,3.294,604,3.294,605,3.294,606,4.491,607,4.491,608,4.491,609,4.613,610,4.491,611,4.491,612,4.491,613,4.491,614,3.775,615,4.491,616,3.294,617,3.294]],["title/controllers/UserController.html",[72,1.041,618,2.175]],["body/controllers/UserController.html",[7,0.029,14,0.298,15,0.298,16,0.262,19,0.593,22,0.753,50,0.514,68,0.298,69,0.013,70,0.019,71,0.019,72,1.013,74,1.175,76,1.748,78,0.336,79,1.613,80,2.146,85,1.114,88,0.686,90,1.613,91,2.707,93,1.483,97,1.497,98,1.391,99,1.114,100,1.476,113,1.479,115,2.63,120,1.916,121,1.091,128,1.604,129,1.367,133,1.748,142,1.613,260,2.37,263,2.118,443,2.118,599,3.651,618,2.907,619,2.709,620,3.254,621,3.716,622,2.37,623,4.423,624,3.222,625,2.709,626,4.423,627,3.222,628,2.709,629,2.709,630,2.515,631,2.37,632,2.709,633,3.222,634,3.222,635,2.709,636,3.222,637,3.222]],["title/controllers/UserMicroController.html",[72,1.041,638,2.175]],["body/controllers/UserMicroController.html",[7,0.029,14,0.303,15,0.303,16,0.267,19,0.597,22,0.765,50,0.519,68,0.303,69,0.014,70,0.019,71,0.019,72,1.03,74,1.193,76,1.776,78,0.341,79,1.63,80,2.156,85,1.126,88,0.694,90,1.63,91,2.725,93,1.283,94,2.752,97,1.514,98,1.721,99,1.126,100,0.888,113,1.502,114,2.752,118,3.746,119,2.151,120,1.946,121,1.108,128,1.63,129,1.388,142,1.63,311,2.408,443,2.151,468,2.408,620,3.289,621,3.289,622,3.289,630,2.536,631,2.408,632,2.752,635,2.752,638,2.939,639,4.281,640,3.273,641,4.471,642,3.273,643,4.471,644,3.273,645,4.471,646,3.273,647,3.273,648,3.273,649,3.273,650,3.273]],["title/modules/UserModule.html",[0,1.3,10,1.968]],["body/modules/UserModule.html",[0,1.928,2,1.727,3,2.252,7,0.029,10,3.66,11,2.662,12,2.041,13,2.041,14,0.348,15,0.348,16,0.306,18,2.238,19,0.653,22,0.879,30,2.473,31,1.727,33,2.252,35,2.238,36,1.274,65,2.918,68,0.348,69,0.016,70,0.021,71,0.021,74,1.789,133,2.041,203,2.473,204,2.473,209,2.768,506,3.163,618,3.589,630,3.065,631,2.768,638,3.589,651,3.163,652,3.163,653,3.763,654,3.763]],["title/injectables/UserService.html",[229,1.207,630,1.648]],["body/injectables/UserService.html",[7,0.029,14,0.231,15,0.231,16,0.203,19,0.563,22,0.582,31,1.143,36,0.843,37,1.637,45,2.877,50,0.509,68,0.231,69,0.01,70,0.016,71,0.016,78,0.259,79,1.342,80,1.97,88,0.68,90,1.342,91,2.409,93,1.361,97,1.483,98,1.377,99,1.103,100,1.558,113,1.143,129,1.057,132,1.901,142,1.764,153,1.832,156,1.832,157,1.832,159,1.832,160,2.094,193,1.24,225,2.009,229,1.342,230,1.351,233,1.997,234,1.832,235,3.559,238,2.708,259,1.832,260,1.832,261,1.832,262,1.637,266,3.559,267,2.409,273,3.559,277,4.067,278,2.708,286,2.094,287,3.095,599,3.324,620,2.708,621,3.797,622,2.708,625,2.094,628,2.094,629,2.094,630,1.833,655,2.094,656,2.491,657,2.491,658,2.491,659,3.681,660,3.681,661,3.681,662,3.681,663,3.681,664,3.681,665,3.681,666,2.491,667,2.491,668,2.491,669,2.491,670,2.491,671,2.491]],["title/coverage.html",[672,3.314]],["body/coverage.html",[7,0.028,16,0.238,33,1.34,36,0.989,38,1.585,50,0.339,69,0.025,70,0.018,71,0.018,72,1.795,73,1.92,75,2.456,102,1.737,107,1.92,113,1.34,124,1.454,134,1.34,150,2.386,151,2.456,199,1.737,203,1.92,213,2.456,229,2.004,231,2.456,291,1.585,293,3.039,305,1.454,306,2.456,327,2.456,335,1.737,336,2.456,345,1.92,346,2.456,352,1.585,359,2.456,385,2.456,405,1.454,406,2.715,420,1.92,422,1.92,423,2.456,446,1.454,466,1.92,467,2.456,468,3.039,510,2.456,567,2.456,587,2.456,599,1.737,600,2.456,601,2.456,609,5.57,618,1.92,619,2.456,630,1.454,638,1.92,639,2.456,655,2.456,672,2.149,673,2.921,674,2.921,675,2.921,676,5.707,677,2.921,678,2.921,679,5.497,680,5.21,681,5.497,682,2.456,683,2.921,684,2.456,685,4.131,686,2.921,687,2.921,688,2.921,689,2.921,690,2.921]],["title/dependencies.html",[3,1.825,691,2.328]],["body/dependencies.html",[3,1.572,7,0.029,22,0.8,25,2.88,27,2.88,29,2.037,31,1.572,69,0.019,70,0.02,71,0.02,112,2.52,119,2.251,121,1.16,193,1.706,206,2.52,220,2.52,303,1.858,314,4.382,315,2.52,317,2.88,514,3.876,529,4.687,530,2.88,692,5.82,693,3.425,694,3.425,695,3.425,696,3.425,697,3.425,698,3.425,699,3.425,700,3.425,701,3.425,702,3.425,703,3.425,704,3.425,705,3.425,706,3.425,707,3.425,708,3.425,709,3.425,710,3.425,711,3.425,712,3.425,713,3.425,714,3.425,715,3.425,716,3.425,717,3.425,718,3.425,719,3.425,720,3.425,721,3.425,722,3.425,723,3.425,724,3.425,725,3.425,726,3.425,727,3.425,728,3.425,729,3.425,730,3.425,731,3.425,732,3.425,733,3.425,734,3.425]],["title/miscellaneous/functions.html",[735,1.503,736,3.343]],["body/miscellaneous/functions.html",[7,0.025,70,0.025,71,0.025,78,0.526,682,4.247,684,5.237,735,2.741,736,4.247,737,5.053]],["title/index.html",[78,0.288,738,2.77,739,2.77]],["body/index.html",[7,0.029,70,0.022,71,0.022,155,2.423,249,2.998,614,3.425,672,2.998,740,4.075,741,3.425,742,3.425,743,4.075,744,4.075,745,4.075,746,6.386,747,4.075,748,4.075,749,4.075,750,6.286,751,4.075,752,5.165,753,4.075,754,4.075,755,4.075,756,4.075,757,5.165,758,5.165,759,4.075,760,4.075,761,4.075,762,3.425,763,3.425,764,3.425,765,4.075]],["title/modules.html",[2,2.067]],["body/modules.html",[1,3.052,2,2.131,6,2.761,7,0.024,8,2.761,9,2.761,10,2.761,70,0.024,71,0.024,766,6.389,767,6.389,768,6.389,769,6.389]],["title/overview.html",[770,3.787]],["body/overview.html",[1,4.249,2,1.696,3,2.225,4,3.106,5,3.106,6,3.712,7,0.028,8,3.549,9,3.549,10,3.549,11,2.631,12,2.005,13,2.005,62,2.197,70,0.021,71,0.021,74,1.347,124,2.695,197,3.106,198,3.106,199,3.219,230,2.005,292,1.567,352,2.937,381,3.106,382,3.106,446,2.695,503,3.106,504,3.106,630,2.695,651,3.106,652,3.106,770,3.106,771,4.849,772,3.695,773,3.695,774,3.695]],["title/properties.html",[152,1.251,691,2.328]],["body/properties.html",[7,0.028,70,0.024,71,0.024,152,1.529,249,3.577,741,4.087,742,4.087,762,4.087,763,4.087,764,4.087,775,4.862,776,4.862,777,4.862,778,4.862,779,4.862]],["title/miscellaneous/typealiases.html",[735,1.503,780,3.977]],["body/miscellaneous/typealiases.html",[7,0.025,50,0.587,70,0.025,71,0.025,78,0.526,406,3.321,417,4.331,735,2.741,781,5.053,782,4.247]],["title/miscellaneous/variables.html",[735,1.503,783,3.343]],["body/miscellaneous/variables.html",[7,0.026,70,0.025,71,0.025,78,0.518,380,3.663,406,3.273,420,3.837,421,4.186,735,2.702,782,4.186,783,4.186,784,4.98]]],"invertedIndex":[["",{"_index":7,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"entities/AuthEntity.html":{},"modules/AuthModule.html":{},"entities/AuthPass.html":{},"injectables/AuthService.html":{},"classes/CreateDto.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/OrderDto.html":{},"controllers/OrdersController.html":{},"entities/OrdersEntity.html":{},"modules/OrdersModule.html":{},"injectables/OrdersService.html":{},"classes/Product.html":{},"controllers/ProductController.html":{},"controllers/ProductMicroController.html":{},"modules/ProductModule.html":{},"injectables/ProductService.html":{},"classes/RegisterDto.html":{},"classes/ResponseModel.html":{},"classes/UpdateDto.html":{},"classes/UpdateProfileDto.html":{},"controllers/UserController.html":{},"controllers/UserMicroController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":609,"title":{},"body":{"classes/UpdateProfileDto.html":{},"coverage.html":{}}}],["0.0.1",{"_index":776,"title":{},"body":{"properties.html":{}}}],["0.1.13",{"_index":730,"title":{},"body":{"dependencies.html":{}}}],["0.10.3",{"_index":708,"title":{},"body":{"dependencies.html":{}}}],["0.13.2",{"_index":716,"title":{},"body":{"dependencies.html":{}}}],["0.3.11",{"_index":734,"title":{},"body":{"dependencies.html":{}}}],["0.5.1",{"_index":715,"title":{},"body":{"dependencies.html":{}}}],["0.6.0",{"_index":722,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":681,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":679,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":680,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":676,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":685,"title":{},"body":{"coverage.html":{}}}],["09",{"_index":615,"title":{},"body":{"classes/UpdateProfileDto.html":{}}}],["1",{"_index":392,"title":{},"body":{"injectables/OrdersService.html":{}}}],["1.0.0",{"_index":725,"title":{},"body":{"dependencies.html":{}}}],["11",{"_index":612,"title":{},"body":{"classes/UpdateProfileDto.html":{}}}],["1h",{"_index":272,"title":{},"body":{"injectables/AuthService.html":{}}}],["2.2.0",{"_index":693,"title":{},"body":{"dependencies.html":{}}}],["2.3.3",{"_index":721,"title":{},"body":{"dependencies.html":{}}}],["200",{"_index":287,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UserService.html":{}}}],["201",{"_index":274,"title":{},"body":{"injectables/AuthService.html":{}}}],["3",{"_index":773,"title":{},"body":{"overview.html":{}}}],["3.0.1",{"_index":713,"title":{},"body":{"dependencies.html":{}}}],["3.0.2",{"_index":732,"title":{},"body":{"dependencies.html":{}}}],["32",{"_index":537,"title":{},"body":{"injectables/ProductService.html":{}}}],["4.0.0",{"_index":723,"title":{},"body":{"dependencies.html":{}}}],["4.0.2",{"_index":703,"title":{},"body":{"dependencies.html":{}}}],["4.1.0",{"_index":710,"title":{},"body":{"dependencies.html":{}}}],["4.1.7",{"_index":706,"title":{},"body":{"dependencies.html":{}}}],["4/6",{"_index":678,"title":{},"body":{"coverage.html":{}}}],["404",{"_index":660,"title":{},"body":{"injectables/UserService.html":{}}}],["5",{"_index":771,"title":{},"body":{"overview.html":{}}}],["5.1.0",{"_index":709,"title":{},"body":{"dependencies.html":{}}}],["5.2.4",{"_index":718,"title":{},"body":{"dependencies.html":{}}}],["50",{"_index":543,"title":{},"body":{"injectables/ProductService.html":{}}}],["6",{"_index":772,"title":{},"body":{"overview.html":{}}}],["6.1.2",{"_index":700,"title":{},"body":{"dependencies.html":{}}}],["6.6.5",{"_index":719,"title":{},"body":{"dependencies.html":{}}}],["6/8",{"_index":687,"title":{},"body":{"coverage.html":{}}}],["66",{"_index":677,"title":{},"body":{"coverage.html":{}}}],["7.2.0",{"_index":733,"title":{},"body":{"dependencies.html":{}}}],["75",{"_index":686,"title":{},"body":{"coverage.html":{}}}],["8",{"_index":774,"title":{},"body":{"overview.html":{}}}],["8.8.0",{"_index":727,"title":{},"body":{"dependencies.html":{}}}],["9",{"_index":608,"title":{},"body":{"classes/UpdateProfileDto.html":{}}}],["9.0.0",{"_index":692,"title":{},"body":{"dependencies.html":{}}}],["9.0.1",{"_index":701,"title":{},"body":{"dependencies.html":{}}}],["9.1.4",{"_index":696,"title":{},"body":{"dependencies.html":{}}}],["9.2.0",{"_index":697,"title":{},"body":{"dependencies.html":{}}}],["9]{3",{"_index":610,"title":{},"body":{"classes/UpdateProfileDto.html":{}}}],["9]{4",{"_index":611,"title":{},"body":{"classes/UpdateProfileDto.html":{}}}],["9]|2[1",{"_index":607,"title":{},"body":{"classes/UpdateProfileDto.html":{}}}],["9]|3[1",{"_index":606,"title":{},"body":{"classes/UpdateProfileDto.html":{}}}],["addproduct",{"_index":425,"title":{},"body":{"controllers/ProductController.html":{},"controllers/ProductMicroController.html":{},"injectables/ProductService.html":{}}}],["addproduct(@body",{"_index":453,"title":{},"body":{"controllers/ProductController.html":{},"controllers/ProductMicroController.html":{}}}],["addproduct(product",{"_index":430,"title":{},"body":{"controllers/ProductController.html":{},"controllers/ProductMicroController.html":{},"injectables/ProductService.html":{}}}],["address",{"_index":153,"title":{},"body":{"entities/AuthEntity.html":{},"classes/UpdateProfileDto.html":{},"injectables/UserService.html":{}}}],["aliases",{"_index":781,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["all_product",{"_index":477,"title":{},"body":{"controllers/ProductMicroController.html":{}}}],["amqp",{"_index":704,"title":{},"body":{"dependencies.html":{}}}],["amqplib",{"_index":707,"title":{},"body":{"dependencies.html":{}}}],["api",{"_index":742,"title":{},"body":{"index.html":{},"properties.html":{}}}],["apiproperty",{"_index":304,"title":{},"body":{"classes/CreateDto.html":{},"classes/LoginDto.html":{},"classes/OrderDto.html":{},"classes/RegisterDto.html":{},"classes/UpdateDto.html":{},"classes/UpdateProfileDto.html":{}}}],["apiproperty()@isemail",{"_index":328,"title":{},"body":{"classes/LoginDto.html":{},"classes/RegisterDto.html":{}}}],["apiproperty()@isstring()@maxlength(20",{"_index":330,"title":{},"body":{"classes/LoginDto.html":{}}}],["apiproperty()@isstring()@minlength(4)@maxlength(20)@matches(/(?=.*[a",{"_index":569,"title":{},"body":{"classes/RegisterDto.html":{}}}],["apiproperty()@isstring()@minlength(4)@maxlength(20)@matches(/^[a",{"_index":578,"title":{},"body":{"classes/RegisterDto.html":{}}}],["apiproperty()@matches(/09(1[0",{"_index":605,"title":{},"body":{"classes/UpdateProfileDto.html":{}}}],["apitags",{"_index":120,"title":{},"body":{"controllers/AuthController.html":{},"controllers/OrdersController.html":{},"controllers/ProductController.html":{},"controllers/UserController.html":{},"controllers/UserMicroController.html":{}}}],["apitags('auth",{"_index":126,"title":{},"body":{"controllers/AuthController.html":{}}}],["apitags('orders",{"_index":354,"title":{},"body":{"controllers/OrdersController.html":{}}}],["apitags('products",{"_index":448,"title":{},"body":{"controllers/ProductController.html":{}}}],["apitags('user",{"_index":632,"title":{},"body":{"controllers/UserController.html":{},"controllers/UserMicroController.html":{}}}],["app",{"_index":748,"title":{},"body":{"index.html":{}}}],["app_interceptor",{"_index":26,"title":{},"body":{"modules/AppModule.html":{}}}],["appmodule",{"_index":1,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["array",{"_index":246,"title":{},"body":{"injectables/AuthService.html":{}}}],["async",{"_index":80,"title":{},"body":{"controllers/AuthController.html":{},"entities/AuthPass.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/OrdersService.html":{},"controllers/ProductController.html":{},"controllers/ProductMicroController.html":{},"injectables/ProductService.html":{},"controllers/UserController.html":{},"controllers/UserMicroController.html":{},"injectables/UserService.html":{}}}],["atleast",{"_index":573,"title":{},"body":{"classes/RegisterDto.html":{}}}],["auth",{"_index":77,"title":{},"body":{"controllers/AuthController.html":{},"entities/AuthEntity.html":{},"entities/OrdersEntity.html":{}}}],["auth.controller",{"_index":207,"title":{},"body":{"modules/AuthModule.html":{}}}],["auth.entity",{"_index":379,"title":{},"body":{"entities/OrdersEntity.html":{}}}],["auth.orders",{"_index":362,"title":{},"body":{"entities/OrdersEntity.html":{}}}],["auth.service",{"_index":125,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{}}}],["auth/auth.module",{"_index":32,"title":{},"body":{"modules/AppModule.html":{}}}],["auth_login",{"_index":104,"title":{},"body":{"controllers/AuthController.html":{}}}],["auth_register",{"_index":109,"title":{},"body":{"controllers/AuthController.html":{}}}],["authcontroller",{"_index":73,"title":{"controllers/AuthController.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"coverage.html":{}}}],["authentity",{"_index":36,"title":{"entities/AuthEntity.html":{}},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"entities/AuthEntity.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"entities/OrdersEntity.html":{},"modules/OrdersModule.html":{},"injectables/OrdersService.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["authmodule",{"_index":6,"title":{"modules/AuthModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules.html":{},"overview.html":{}}}],["author",{"_index":762,"title":{},"body":{"index.html":{},"properties.html":{}}}],["authpass",{"_index":33,"title":{"entities/AuthPass.html":{}},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"entities/AuthEntity.html":{},"modules/AuthModule.html":{},"entities/AuthPass.html":{},"modules/UserModule.html":{},"coverage.html":{}}}],["authpass.id",{"_index":166,"title":{},"body":{"entities/AuthEntity.html":{}}}],["authpass.password",{"_index":139,"title":{},"body":{"controllers/AuthController.html":{}}}],["authrepository",{"_index":238,"title":{},"body":{"injectables/AuthService.html":{},"injectables/OrdersService.html":{},"injectables/UserService.html":{}}}],["authservice",{"_index":124,"title":{"injectables/AuthService.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["await",{"_index":225,"title":{},"body":{"entities/AuthPass.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/OrdersService.html":{},"controllers/ProductController.html":{},"controllers/ProductMicroController.html":{},"injectables/ProductService.html":{},"injectables/UserService.html":{}}}],["bcrypt",{"_index":220,"title":{},"body":{"entities/AuthPass.html":{},"injectables/AuthService.html":{},"dependencies.html":{}}}],["bcrypt.compare(logindto.password",{"_index":283,"title":{},"body":{"injectables/AuthService.html":{}}}],["bcrypt.gensalt",{"_index":226,"title":{},"body":{"entities/AuthPass.html":{}}}],["bcrypt.hash(this.password",{"_index":228,"title":{},"body":{"entities/AuthPass.html":{}}}],["beforeinsert",{"_index":221,"title":{},"body":{"entities/AuthPass.html":{}}}],["beforeupdate",{"_index":222,"title":{},"body":{"entities/AuthPass.html":{}}}],["body",{"_index":115,"title":{},"body":{"controllers/AuthController.html":{},"controllers/OrdersController.html":{},"controllers/ProductController.html":{},"controllers/ProductMicroController.html":{},"controllers/UserController.html":{}}}],["boolean",{"_index":367,"title":{},"body":{"entities/OrdersEntity.html":{},"classes/ResponseModel.html":{}}}],["bootstrap",{"_index":684,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["browse",{"_index":769,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":766,"title":{},"body":{"modules.html":{}}}],["cache",{"_index":514,"title":{},"body":{"injectables/ProductService.html":{},"dependencies.html":{}}}],["cacheditem",{"_index":538,"title":{},"body":{"injectables/ProductService.html":{}}}],["cacheinterceptor",{"_index":20,"title":{},"body":{"modules/AppModule.html":{},"controllers/ProductMicroController.html":{}}}],["cachekey",{"_index":493,"title":{},"body":{"controllers/ProductMicroController.html":{}}}],["cachekey('cache_getall",{"_index":497,"title":{},"body":{"controllers/ProductMicroController.html":{}}}],["cachekey('cache_getall')@get()@messagepattern({name",{"_index":476,"title":{},"body":{"controllers/ProductMicroController.html":{}}}],["cachemanager",{"_index":518,"title":{},"body":{"injectables/ProductService.html":{}}}],["cachemodule",{"_index":21,"title":{},"body":{"modules/AppModule.html":{}}}],["cachemodule.register",{"_index":46,"title":{},"body":{"modules/AppModule.html":{}}}],["capital",{"_index":575,"title":{},"body":{"classes/RegisterDto.html":{}}}],["cascade",{"_index":168,"title":{},"body":{"entities/AuthEntity.html":{},"entities/OrdersEntity.html":{}}}],["catch",{"_index":551,"title":{},"body":{"injectables/ProductService.html":{}}}],["catcherror",{"_index":255,"title":{},"body":{"injectables/AuthService.html":{}}}],["catcherror((err",{"_index":275,"title":{},"body":{"injectables/AuthService.html":{}}}],["characters",{"_index":613,"title":{},"body":{"classes/UpdateProfileDto.html":{}}}],["class",{"_index":69,"title":{"classes/CreateDto.html":{},"classes/LoginDto.html":{},"classes/OrderDto.html":{},"classes/Product.html":{},"classes/RegisterDto.html":{},"classes/ResponseModel.html":{},"classes/UpdateDto.html":{},"classes/UpdateProfileDto.html":{}},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"entities/AuthEntity.html":{},"modules/AuthModule.html":{},"entities/AuthPass.html":{},"injectables/AuthService.html":{},"classes/CreateDto.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/OrderDto.html":{},"controllers/OrdersController.html":{},"entities/OrdersEntity.html":{},"modules/OrdersModule.html":{},"injectables/OrdersService.html":{},"classes/Product.html":{},"controllers/ProductController.html":{},"controllers/ProductMicroController.html":{},"modules/ProductModule.html":{},"injectables/ProductService.html":{},"classes/RegisterDto.html":{},"classes/ResponseModel.html":{},"classes/UpdateDto.html":{},"classes/UpdateProfileDto.html":{},"controllers/UserController.html":{},"controllers/UserMicroController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{}}}],["classes",{"_index":292,"title":{},"body":{"classes/CreateDto.html":{},"classes/LoginDto.html":{},"classes/OrderDto.html":{},"classes/Product.html":{},"classes/RegisterDto.html":{},"classes/ResponseModel.html":{},"classes/UpdateDto.html":{},"classes/UpdateProfileDto.html":{},"overview.html":{}}}],["cluster_appmodule",{"_index":4,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":5,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_authmodule",{"_index":197,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_providers",{"_index":198,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_ordersmodule",{"_index":381,"title":{},"body":{"modules/OrdersModule.html":{},"overview.html":{}}}],["cluster_ordersmodule_providers",{"_index":382,"title":{},"body":{"modules/OrdersModule.html":{},"overview.html":{}}}],["cluster_productmodule",{"_index":503,"title":{},"body":{"modules/ProductModule.html":{},"overview.html":{}}}],["cluster_productmodule_providers",{"_index":504,"title":{},"body":{"modules/ProductModule.html":{},"overview.html":{}}}],["cluster_usermodule",{"_index":651,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["cluster_usermodule_providers",{"_index":652,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["code",{"_index":273,"title":{},"body":{"injectables/AuthService.html":{},"classes/ResponseModel.html":{},"injectables/UserService.html":{}}}],["column",{"_index":188,"title":{},"body":{"entities/AuthEntity.html":{},"entities/AuthPass.html":{},"entities/OrdersEntity.html":{}}}],["column({default",{"_index":368,"title":{},"body":{"entities/OrdersEntity.html":{}}}],["column({nullable",{"_index":163,"title":{},"body":{"entities/AuthEntity.html":{}}}],["column({type",{"_index":371,"title":{},"body":{"entities/OrdersEntity.html":{}}}],["column({unique",{"_index":174,"title":{},"body":{"entities/AuthEntity.html":{}}}],["config",{"_index":201,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{}}}],["configmodule",{"_index":23,"title":{},"body":{"modules/AppModule.html":{}}}],["configmodule.forroot",{"_index":43,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice",{"_index":24,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice.get('db_host",{"_index":53,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice.get('db_name",{"_index":61,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice.get('db_password",{"_index":59,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice.get('db_port",{"_index":55,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice.get('db_username",{"_index":57,"title":{},"body":{"modules/AppModule.html":{}}}],["conflictexception",{"_index":257,"title":{},"body":{"injectables/AuthService.html":{}}}],["connection",{"_index":705,"title":{},"body":{"dependencies.html":{}}}],["console.log(err.message",{"_index":558,"title":{},"body":{"injectables/ProductService.html":{}}}],["console.log(error.message",{"_index":563,"title":{},"body":{"injectables/ProductService.html":{}}}],["console.log(id",{"_index":288,"title":{},"body":{"injectables/AuthService.html":{}}}],["const",{"_index":132,"title":{},"body":{"controllers/AuthController.html":{},"entities/AuthPass.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/OrdersService.html":{},"classes/Product.html":{},"controllers/ProductController.html":{},"controllers/ProductMicroController.html":{},"injectables/ProductService.html":{},"injectables/UserService.html":{}}}],["constructor",{"_index":233,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/OrdersService.html":{},"injectables/ProductService.html":{},"classes/ResponseModel.html":{},"injectables/UserService.html":{}}}],["constructor(authrepository",{"_index":234,"title":{},"body":{"injectables/AuthService.html":{},"injectables/OrdersService.html":{},"injectables/UserService.html":{}}}],["constructor(authservice",{"_index":307,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["constructor(cachemanager",{"_index":513,"title":{},"body":{"injectables/ProductService.html":{}}}],["constructor(private",{"_index":128,"title":{},"body":{"controllers/AuthController.html":{},"injectables/JwtStrategy.html":{},"controllers/OrdersController.html":{},"controllers/ProductController.html":{},"controllers/ProductMicroController.html":{},"controllers/UserController.html":{},"controllers/UserMicroController.html":{}}}],["constructor(success",{"_index":588,"title":{},"body":{"classes/ResponseModel.html":{}}}],["contain",{"_index":572,"title":{},"body":{"classes/RegisterDto.html":{}}}],["controller",{"_index":72,"title":{"controllers/AuthController.html":{},"controllers/OrdersController.html":{},"controllers/ProductController.html":{},"controllers/ProductMicroController.html":{},"controllers/UserController.html":{},"controllers/UserMicroController.html":{}},"body":{"controllers/AuthController.html":{},"controllers/OrdersController.html":{},"controllers/ProductController.html":{},"controllers/ProductMicroController.html":{},"controllers/UserController.html":{},"controllers/UserMicroController.html":{},"coverage.html":{}}}],["controller('auth",{"_index":127,"title":{},"body":{"controllers/AuthController.html":{}}}],["controller('microservice/product",{"_index":495,"title":{},"body":{"controllers/ProductMicroController.html":{}}}],["controller('microservice/user",{"_index":647,"title":{},"body":{"controllers/UserMicroController.html":{}}}],["controller('orders",{"_index":355,"title":{},"body":{"controllers/OrdersController.html":{}}}],["controller('products",{"_index":449,"title":{},"body":{"controllers/ProductController.html":{}}}],["controller('user",{"_index":633,"title":{},"body":{"controllers/UserController.html":{}}}],["controllers",{"_index":74,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"controllers/OrdersController.html":{},"modules/OrdersModule.html":{},"controllers/ProductController.html":{},"controllers/ProductMicroController.html":{},"modules/ProductModule.html":{},"controllers/UserController.html":{},"controllers/UserMicroController.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["coverage",{"_index":672,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["created_at",{"_index":214,"title":{},"body":{"entities/AuthPass.html":{},"entities/OrdersEntity.html":{}}}],["created_time",{"_index":154,"title":{},"body":{"entities/AuthEntity.html":{}}}],["createdatecolumn",{"_index":172,"title":{},"body":{"entities/AuthEntity.html":{},"entities/AuthPass.html":{},"entities/OrdersEntity.html":{}}}],["createdto",{"_index":291,"title":{"classes/CreateDto.html":{}},"body":{"classes/CreateDto.html":{},"controllers/ProductController.html":{},"controllers/ProductMicroController.html":{},"classes/UpdateDto.html":{},"coverage.html":{}}}],["createdto.image",{"_index":456,"title":{},"body":{"controllers/ProductController.html":{},"controllers/ProductMicroController.html":{}}}],["createdto.likes",{"_index":458,"title":{},"body":{"controllers/ProductController.html":{},"controllers/ProductMicroController.html":{}}}],["createdto.title",{"_index":454,"title":{},"body":{"controllers/ProductController.html":{},"controllers/ProductMicroController.html":{}}}],["database",{"_index":60,"title":{},"body":{"modules/AppModule.html":{}}}],["date",{"_index":171,"title":{},"body":{"entities/AuthEntity.html":{},"entities/AuthPass.html":{},"entities/OrdersEntity.html":{}}}],["decimal",{"_index":372,"title":{},"body":{"entities/OrdersEntity.html":{}}}],["decorators",{"_index":85,"title":{},"body":{"controllers/AuthController.html":{},"entities/AuthEntity.html":{},"entities/AuthPass.html":{},"classes/CreateDto.html":{},"classes/LoginDto.html":{},"classes/OrderDto.html":{},"controllers/OrdersController.html":{},"entities/OrdersEntity.html":{},"classes/Product.html":{},"controllers/ProductController.html":{},"controllers/ProductMicroController.html":{},"classes/RegisterDto.html":{},"classes/UpdateDto.html":{},"classes/UpdateProfileDto.html":{},"controllers/UserController.html":{},"controllers/UserMicroController.html":{}}}],["default",{"_index":380,"title":{},"body":{"entities/OrdersEntity.html":{},"classes/Product.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":88,"title":{},"body":{"controllers/AuthController.html":{},"entities/AuthEntity.html":{},"entities/AuthPass.html":{},"injectables/AuthService.html":{},"classes/CreateDto.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/OrderDto.html":{},"controllers/OrdersController.html":{},"entities/OrdersEntity.html":{},"injectables/OrdersService.html":{},"classes/Product.html":{},"controllers/ProductController.html":{},"controllers/ProductMicroController.html":{},"injectables/ProductService.html":{},"classes/RegisterDto.html":{},"classes/ResponseModel.html":{},"classes/UpdateDto.html":{},"classes/UpdateProfileDto.html":{},"controllers/UserController.html":{},"controllers/UserMicroController.html":{},"injectables/UserService.html":{}}}],["delete",{"_index":442,"title":{},"body":{"controllers/ProductController.html":{},"controllers/ProductMicroController.html":{},"injectables/ProductService.html":{}}}],["delete(':id",{"_index":437,"title":{},"body":{"controllers/ProductController.html":{}}}],["delete()@messagepattern({name",{"_index":484,"title":{},"body":{"controllers/ProductMicroController.html":{}}}],["delete(id",{"_index":521,"title":{},"body":{"injectables/ProductService.html":{}}}],["dependencies",{"_index":3,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/OrdersModule.html":{},"modules/ProductModule.html":{},"modules/UserModule.html":{},"dependencies.html":{},"overview.html":{}}}],["description",{"_index":249,"title":{},"body":{"injectables/AuthService.html":{},"index.html":{},"properties.html":{}}}],["development",{"_index":749,"title":{},"body":{"index.html":{}}}],["digits",{"_index":580,"title":{},"body":{"classes/RegisterDto.html":{}}}],["document",{"_index":418,"title":{},"body":{"classes/Product.html":{}}}],["documentation",{"_index":673,"title":{},"body":{"coverage.html":{}}}],["dotenv",{"_index":202,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{}}}],["dtos/login.dto",{"_index":122,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["dtos/product.dto",{"_index":444,"title":{},"body":{"controllers/ProductController.html":{},"controllers/ProductMicroController.html":{},"injectables/ProductService.html":{}}}],["dtos/register.dto",{"_index":123,"title":{},"body":{"controllers/AuthController.html":{}}}],["dtos/update",{"_index":628,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["e2e",{"_index":759,"title":{},"body":{"index.html":{}}}],["eager",{"_index":167,"title":{},"body":{"entities/AuthEntity.html":{}}}],["email",{"_index":155,"title":{},"body":{"entities/AuthEntity.html":{},"injectables/AuthService.html":{},"classes/LoginDto.html":{},"classes/RegisterDto.html":{},"index.html":{}}}],["entities",{"_index":62,"title":{},"body":{"modules/AppModule.html":{},"entities/AuthEntity.html":{},"entities/AuthPass.html":{},"entities/OrdersEntity.html":{},"overview.html":{}}}],["entities/auth",{"_index":34,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{}}}],["entities/auth.entity",{"_index":37,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/UserService.html":{}}}],["entities/orders.entity",{"_index":39,"title":{},"body":{"modules/AppModule.html":{}}}],["entity",{"_index":150,"title":{"entities/AuthEntity.html":{},"entities/AuthPass.html":{},"entities/OrdersEntity.html":{}},"body":{"entities/AuthEntity.html":{},"entities/AuthPass.html":{},"entities/OrdersEntity.html":{},"coverage.html":{}}}],["err",{"_index":552,"title":{},"body":{"injectables/ProductService.html":{}}}],["error",{"_index":562,"title":{},"body":{"injectables/ProductService.html":{}}}],["expiresin",{"_index":271,"title":{},"body":{"injectables/AuthService.html":{}}}],["export",{"_index":68,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"entities/AuthEntity.html":{},"modules/AuthModule.html":{},"entities/AuthPass.html":{},"injectables/AuthService.html":{},"classes/CreateDto.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/OrderDto.html":{},"controllers/OrdersController.html":{},"entities/OrdersEntity.html":{},"modules/OrdersModule.html":{},"injectables/OrdersService.html":{},"classes/Product.html":{},"controllers/ProductController.html":{},"controllers/ProductMicroController.html":{},"modules/ProductModule.html":{},"injectables/ProductService.html":{},"classes/RegisterDto.html":{},"classes/ResponseModel.html":{},"classes/UpdateDto.html":{},"classes/UpdateProfileDto.html":{},"controllers/UserController.html":{},"controllers/UserMicroController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["express",{"_index":699,"title":{},"body":{"dependencies.html":{}}}],["extends",{"_index":318,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["extractjwt",{"_index":312,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["extractjwt.fromauthheaderasbearertoken",{"_index":322,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["false",{"_index":369,"title":{},"body":{"entities/OrdersEntity.html":{}}}],["file",{"_index":16,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"entities/AuthEntity.html":{},"modules/AuthModule.html":{},"entities/AuthPass.html":{},"injectables/AuthService.html":{},"classes/CreateDto.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/OrderDto.html":{},"controllers/OrdersController.html":{},"entities/OrdersEntity.html":{},"modules/OrdersModule.html":{},"injectables/OrdersService.html":{},"classes/Product.html":{},"controllers/ProductController.html":{},"controllers/ProductMicroController.html":{},"modules/ProductModule.html":{},"injectables/ProductService.html":{},"classes/RegisterDto.html":{},"classes/ResponseModel.html":{},"classes/UpdateDto.html":{},"classes/UpdateProfileDto.html":{},"controllers/UserController.html":{},"controllers/UserMicroController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["find",{"_index":241,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ProductService.html":{}}}],["find_by_id",{"_index":95,"title":{},"body":{"controllers/AuthController.html":{}}}],["findbyid",{"_index":232,"title":{},"body":{"injectables/AuthService.html":{}}}],["findbyid(id",{"_index":239,"title":{},"body":{"injectables/AuthService.html":{}}}],["findone",{"_index":511,"title":{},"body":{"injectables/ProductService.html":{}}}],["findone(id",{"_index":523,"title":{},"body":{"injectables/ProductService.html":{}}}],["findproduct",{"_index":564,"title":{},"body":{"injectables/ProductService.html":{}}}],["finduser",{"_index":277,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UserService.html":{}}}],["finduser.address",{"_index":665,"title":{},"body":{"injectables/UserService.html":{}}}],["finduser.authpass.password",{"_index":281,"title":{},"body":{"injectables/AuthService.html":{}}}],["finduser.first_name",{"_index":662,"title":{},"body":{"injectables/UserService.html":{}}}],["finduser.id",{"_index":286,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UserService.html":{}}}],["finduser.last_name",{"_index":663,"title":{},"body":{"injectables/UserService.html":{}}}],["finduser.phone_number",{"_index":664,"title":{},"body":{"injectables/UserService.html":{}}}],["finduser.profile_image",{"_index":666,"title":{},"body":{"injectables/UserService.html":{}}}],["first_name",{"_index":156,"title":{},"body":{"entities/AuthEntity.html":{},"classes/UpdateProfileDto.html":{},"injectables/UserService.html":{}}}],["found",{"_index":659,"title":{},"body":{"injectables/UserService.html":{}}}],["founduser",{"_index":289,"title":{},"body":{"injectables/AuthService.html":{}}}],["framework",{"_index":744,"title":{},"body":{"index.html":{}}}],["from(this.authrepository.save(authentity)).pipe",{"_index":264,"title":{},"body":{"injectables/AuthService.html":{}}}],["function",{"_index":683,"title":{},"body":{"coverage.html":{}}}],["functions",{"_index":736,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["get(':id",{"_index":434,"title":{},"body":{"controllers/ProductController.html":{},"controllers/ProductMicroController.html":{}}}],["get(':id')@messagepattern({name",{"_index":480,"title":{},"body":{"controllers/ProductMicroController.html":{}}}],["get('profile:id",{"_index":623,"title":{},"body":{"controllers/UserController.html":{}}}],["get('users",{"_index":148,"title":{},"body":{"controllers/AuthController.html":{}}}],["get('users')@messagepattern({name",{"_index":86,"title":{},"body":{"controllers/AuthController.html":{}}}],["get()@messagepattern({name",{"_index":94,"title":{},"body":{"controllers/AuthController.html":{},"controllers/UserMicroController.html":{}}}],["get_all_users",{"_index":87,"title":{},"body":{"controllers/AuthController.html":{}}}],["get_product",{"_index":481,"title":{},"body":{"controllers/ProductMicroController.html":{}}}],["get_user_profile",{"_index":641,"title":{},"body":{"controllers/UserMicroController.html":{}}}],["getall",{"_index":426,"title":{},"body":{"controllers/ProductController.html":{},"controllers/ProductMicroController.html":{},"injectables/ProductService.html":{}}}],["getallusers",{"_index":81,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["getone",{"_index":427,"title":{},"body":{"controllers/ProductController.html":{},"injectables/ProductService.html":{}}}],["getone(@param('id",{"_index":451,"title":{},"body":{"controllers/ProductController.html":{}}}],["getone(id",{"_index":433,"title":{},"body":{"controllers/ProductController.html":{},"injectables/ProductService.html":{}}}],["getoneproduct",{"_index":470,"title":{},"body":{"controllers/ProductMicroController.html":{}}}],["getoneproduct(id",{"_index":479,"title":{},"body":{"controllers/ProductMicroController.html":{}}}],["getorder",{"_index":347,"title":{},"body":{"controllers/OrdersController.html":{},"injectables/OrdersService.html":{}}}],["gets",{"_index":244,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ProductService.html":{}}}],["getting",{"_index":738,"title":{"index.html":{}},"body":{}}],["getuserbyid",{"_index":82,"title":{},"body":{"controllers/AuthController.html":{}}}],["getuserbyid(id",{"_index":92,"title":{},"body":{"controllers/AuthController.html":{}}}],["getuserprofile",{"_index":620,"title":{},"body":{"controllers/UserController.html":{},"controllers/UserMicroController.html":{},"injectables/UserService.html":{}}}],["getuserprofile(@param('id",{"_index":634,"title":{},"body":{"controllers/UserController.html":{}}}],["getuserprofile(id",{"_index":622,"title":{},"body":{"controllers/UserController.html":{},"controllers/UserMicroController.html":{},"injectables/UserService.html":{}}}],["hashedpassword",{"_index":280,"title":{},"body":{"injectables/AuthService.html":{}}}],["hashpassword(password",{"_index":223,"title":{},"body":{"entities/AuthPass.html":{}}}],["host",{"_index":52,"title":{},"body":{"modules/AppModule.html":{}}}],["httpexception",{"_index":531,"title":{},"body":{"injectables/ProductService.html":{}}}],["httpexception('something",{"_index":554,"title":{},"body":{"injectables/ProductService.html":{}}}],["httpstatus",{"_index":532,"title":{},"body":{"injectables/ProductService.html":{}}}],["httpstatus.conflict",{"_index":557,"title":{},"body":{"injectables/ProductService.html":{}}}],["id",{"_index":100,"title":{},"body":{"controllers/AuthController.html":{},"entities/AuthEntity.html":{},"entities/AuthPass.html":{},"injectables/AuthService.html":{},"classes/CreateDto.html":{},"entities/OrdersEntity.html":{},"injectables/OrdersService.html":{},"classes/Product.html":{},"controllers/ProductController.html":{},"controllers/ProductMicroController.html":{},"injectables/ProductService.html":{},"classes/UpdateDto.html":{},"controllers/UserController.html":{},"controllers/UserMicroController.html":{},"injectables/UserService.html":{}}}],["identifier",{"_index":674,"title":{},"body":{"coverage.html":{}}}],["image",{"_index":294,"title":{},"body":{"classes/CreateDto.html":{},"classes/Product.html":{},"classes/UpdateDto.html":{}}}],["import",{"_index":19,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"entities/AuthEntity.html":{},"modules/AuthModule.html":{},"entities/AuthPass.html":{},"injectables/AuthService.html":{},"classes/CreateDto.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/OrderDto.html":{},"controllers/OrdersController.html":{},"entities/OrdersEntity.html":{},"modules/OrdersModule.html":{},"injectables/OrdersService.html":{},"classes/Product.html":{},"controllers/ProductController.html":{},"controllers/ProductMicroController.html":{},"modules/ProductModule.html":{},"injectables/ProductService.html":{},"classes/RegisterDto.html":{},"classes/UpdateDto.html":{},"classes/UpdateProfileDto.html":{},"controllers/UserController.html":{},"controllers/UserMicroController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["imports",{"_index":18,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/OrdersModule.html":{},"modules/ProductModule.html":{},"modules/UserModule.html":{}}}],["index",{"_index":78,"title":{"index.html":{}},"body":{"controllers/AuthController.html":{},"entities/AuthEntity.html":{},"entities/AuthPass.html":{},"injectables/AuthService.html":{},"classes/CreateDto.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/OrderDto.html":{},"controllers/OrdersController.html":{},"entities/OrdersEntity.html":{},"injectables/OrdersService.html":{},"classes/Product.html":{},"controllers/ProductController.html":{},"controllers/ProductMicroController.html":{},"injectables/ProductService.html":{},"classes/RegisterDto.html":{},"classes/ResponseModel.html":{},"classes/UpdateDto.html":{},"classes/UpdateProfileDto.html":{},"controllers/UserController.html":{},"controllers/UserMicroController.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":14,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"entities/AuthEntity.html":{},"modules/AuthModule.html":{},"entities/AuthPass.html":{},"injectables/AuthService.html":{},"classes/CreateDto.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/OrderDto.html":{},"controllers/OrdersController.html":{},"entities/OrdersEntity.html":{},"modules/OrdersModule.html":{},"injectables/OrdersService.html":{},"classes/Product.html":{},"controllers/ProductController.html":{},"controllers/ProductMicroController.html":{},"modules/ProductModule.html":{},"injectables/ProductService.html":{},"classes/RegisterDto.html":{},"classes/ResponseModel.html":{},"classes/UpdateDto.html":{},"classes/UpdateProfileDto.html":{},"controllers/UserController.html":{},"controllers/UserMicroController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["inject",{"_index":64,"title":{},"body":{"modules/AppModule.html":{},"injectables/ProductService.html":{}}}],["inject('cache_manager",{"_index":534,"title":{},"body":{"injectables/ProductService.html":{}}}],["injectable",{"_index":229,"title":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/OrdersService.html":{},"injectables/ProductService.html":{},"injectables/UserService.html":{}},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/OrdersService.html":{},"injectables/ProductService.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["injectables",{"_index":230,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/OrdersService.html":{},"injectables/ProductService.html":{},"injectables/UserService.html":{},"overview.html":{}}}],["injectmodel",{"_index":533,"title":{},"body":{"injectables/ProductService.html":{}}}],["injectmodel(product.name",{"_index":535,"title":{},"body":{"injectables/ProductService.html":{}}}],["injectrepository",{"_index":259,"title":{},"body":{"injectables/AuthService.html":{},"injectables/OrdersService.html":{},"injectables/UserService.html":{}}}],["injectrepository(authentity",{"_index":261,"title":{},"body":{"injectables/AuthService.html":{},"injectables/OrdersService.html":{},"injectables/UserService.html":{}}}],["installation",{"_index":745,"title":{},"body":{"index.html":{}}}],["installrunning",{"_index":747,"title":{},"body":{"index.html":{}}}],["interface/response.model",{"_index":260,"title":{},"body":{"injectables/AuthService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["ioredis",{"_index":717,"title":{},"body":{"dependencies.html":{}}}],["isemail",{"_index":332,"title":{},"body":{"classes/LoginDto.html":{},"classes/RegisterDto.html":{}}}],["isglobal",{"_index":44,"title":{},"body":{"modules/AppModule.html":{}}}],["isint",{"_index":301,"title":{},"body":{"classes/CreateDto.html":{},"classes/UpdateDto.html":{}}}],["isstring",{"_index":302,"title":{},"body":{"classes/CreateDto.html":{},"classes/LoginDto.html":{},"classes/RegisterDto.html":{},"classes/UpdateDto.html":{}}}],["isstring()@apiproperty",{"_index":297,"title":{},"body":{"classes/CreateDto.html":{},"classes/UpdateDto.html":{}}}],["joincolumn",{"_index":190,"title":{},"body":{"entities/AuthEntity.html":{}}}],["jwt",{"_index":315,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/OrdersService.html":{},"dependencies.html":{}}}],["jwt.strategy",{"_index":208,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{}}}],["jwtfromrequest",{"_index":321,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["jwtmodule",{"_index":205,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtmodule.register",{"_index":210,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtservice",{"_index":236,"title":{},"body":{"injectables/AuthService.html":{}}}],["jwtstrategy",{"_index":199,"title":{"injectables/JwtStrategy.html":{}},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["last_name",{"_index":157,"title":{},"body":{"entities/AuthEntity.html":{},"classes/UpdateProfileDto.html":{},"injectables/UserService.html":{}}}],["letter",{"_index":576,"title":{},"body":{"classes/RegisterDto.html":{}}}],["license",{"_index":778,"title":{},"body":{"properties.html":{}}}],["likes",{"_index":295,"title":{},"body":{"classes/CreateDto.html":{},"classes/Product.html":{},"classes/UpdateDto.html":{}}}],["local",{"_index":724,"title":{},"body":{"dependencies.html":{}}}],["login",{"_index":83,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["login(@body",{"_index":145,"title":{},"body":{"controllers/AuthController.html":{}}}],["login(login",{"_index":101,"title":{},"body":{"controllers/AuthController.html":{}}}],["login(logindto",{"_index":247,"title":{},"body":{"injectables/AuthService.html":{}}}],["logindto",{"_index":102,"title":{"classes/LoginDto.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/LoginDto.html":{},"coverage.html":{}}}],["logindto.email",{"_index":279,"title":{},"body":{"injectables/AuthService.html":{}}}],["manager",{"_index":529,"title":{},"body":{"injectables/ProductService.html":{},"dependencies.html":{}}}],["manytoone",{"_index":378,"title":{},"body":{"entities/OrdersEntity.html":{}}}],["manytoone(undefined",{"_index":361,"title":{},"body":{"entities/OrdersEntity.html":{}}}],["map",{"_index":256,"title":{},"body":{"injectables/AuthService.html":{}}}],["map((user",{"_index":265,"title":{},"body":{"injectables/AuthService.html":{}}}],["matches",{"_index":582,"title":{},"body":{"classes/RegisterDto.html":{},"classes/UpdateProfileDto.html":{}}}],["matches(/(?=.*[a",{"_index":586,"title":{},"body":{"classes/RegisterDto.html":{}}}],["matches(/09(1[0",{"_index":617,"title":{},"body":{"classes/UpdateProfileDto.html":{}}}],["matches(/^[a",{"_index":585,"title":{},"body":{"classes/RegisterDto.html":{}}}],["matching",{"_index":71,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"entities/AuthEntity.html":{},"modules/AuthModule.html":{},"entities/AuthPass.html":{},"injectables/AuthService.html":{},"classes/CreateDto.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/OrderDto.html":{},"controllers/OrdersController.html":{},"entities/OrdersEntity.html":{},"modules/OrdersModule.html":{},"injectables/OrdersService.html":{},"classes/Product.html":{},"controllers/ProductController.html":{},"controllers/ProductMicroController.html":{},"modules/ProductModule.html":{},"injectables/ProductService.html":{},"classes/RegisterDto.html":{},"classes/ResponseModel.html":{},"classes/UpdateDto.html":{},"classes/UpdateProfileDto.html":{},"controllers/UserController.html":{},"controllers/UserMicroController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["maxlength",{"_index":333,"title":{},"body":{"classes/LoginDto.html":{},"classes/RegisterDto.html":{}}}],["maxlength(20",{"_index":334,"title":{},"body":{"classes/LoginDto.html":{},"classes/RegisterDto.html":{}}}],["mehran",{"_index":763,"title":{},"body":{"index.html":{},"properties.html":{}}}],["mehranfmpx@gmail.com",{"_index":765,"title":{},"body":{"index.html":{}}}],["message",{"_index":571,"title":{},"body":{"classes/RegisterDto.html":{},"classes/UpdateProfileDto.html":{}}}],["messagepattern",{"_index":118,"title":{},"body":{"controllers/AuthController.html":{},"controllers/ProductMicroController.html":{},"controllers/UserMicroController.html":{}}}],["metadata",{"_index":729,"title":{},"body":{"dependencies.html":{}}}],["methods",{"_index":79,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"controllers/OrdersController.html":{},"injectables/OrdersService.html":{},"controllers/ProductController.html":{},"controllers/ProductMicroController.html":{},"injectables/ProductService.html":{},"controllers/UserController.html":{},"controllers/UserMicroController.html":{},"injectables/UserService.html":{}}}],["microservice",{"_index":777,"title":{},"body":{"properties.html":{}}}],["microservice.controller",{"_index":506,"title":{},"body":{"modules/ProductModule.html":{},"modules/UserModule.html":{}}}],["microservice.controller.ts",{"_index":468,"title":{},"body":{"controllers/ProductMicroController.html":{},"controllers/UserMicroController.html":{},"coverage.html":{}}}],["microservice.controller.ts:14",{"_index":642,"title":{},"body":{"controllers/UserMicroController.html":{}}}],["microservice.controller.ts:17",{"_index":478,"title":{},"body":{"controllers/ProductMicroController.html":{}}}],["microservice.controller.ts:20",{"_index":646,"title":{},"body":{"controllers/UserMicroController.html":{}}}],["microservice.controller.ts:23",{"_index":482,"title":{},"body":{"controllers/ProductMicroController.html":{}}}],["microservice.controller.ts:29",{"_index":475,"title":{},"body":{"controllers/ProductMicroController.html":{}}}],["microservice.controller.ts:40",{"_index":491,"title":{},"body":{"controllers/ProductMicroController.html":{}}}],["microservice.controller.ts:49",{"_index":486,"title":{},"body":{"controllers/ProductMicroController.html":{}}}],["microservice/product",{"_index":469,"title":{},"body":{"controllers/ProductMicroController.html":{}}}],["microservice/user",{"_index":640,"title":{},"body":{"controllers/UserMicroController.html":{}}}],["microshop",{"_index":740,"title":{},"body":{"index.html":{}}}],["minlength",{"_index":583,"title":{},"body":{"classes/RegisterDto.html":{}}}],["minlength(4",{"_index":584,"title":{},"body":{"classes/RegisterDto.html":{}}}],["miscellaneous",{"_index":735,"title":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mode",{"_index":752,"title":{},"body":{"index.html":{}}}],["model",{"_index":516,"title":{},"body":{"injectables/ProductService.html":{}}}],["module",{"_index":0,"title":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/OrdersModule.html":{},"modules/ProductModule.html":{},"modules/UserModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/OrdersModule.html":{},"modules/ProductModule.html":{},"modules/UserModule.html":{}}}],["modules",{"_index":2,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/OrdersModule.html":{},"modules/ProductModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["mongoose",{"_index":530,"title":{},"body":{"injectables/ProductService.html":{},"dependencies.html":{}}}],["mongoosemodule",{"_index":28,"title":{},"body":{"modules/AppModule.html":{},"modules/ProductModule.html":{}}}],["mongoosemodule.forfeature",{"_index":508,"title":{},"body":{"modules/ProductModule.html":{}}}],["mongoosemodule.forroot(process.env.db_mongo",{"_index":47,"title":{},"body":{"modules/AppModule.html":{}}}],["mysql2",{"_index":720,"title":{},"body":{"dependencies.html":{}}}],["name",{"_index":98,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"controllers/OrdersController.html":{},"injectables/OrdersService.html":{},"controllers/ProductController.html":{},"controllers/ProductMicroController.html":{},"modules/ProductModule.html":{},"injectables/ProductService.html":{},"classes/ResponseModel.html":{},"controllers/UserController.html":{},"controllers/UserMicroController.html":{},"injectables/UserService.html":{}}}],["nest",{"_index":743,"title":{},"body":{"index.html":{}}}],["nestjs/common",{"_index":22,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"controllers/OrdersController.html":{},"modules/OrdersModule.html":{},"injectables/OrdersService.html":{},"controllers/ProductController.html":{},"controllers/ProductMicroController.html":{},"modules/ProductModule.html":{},"injectables/ProductService.html":{},"controllers/UserController.html":{},"controllers/UserMicroController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["nestjs/config",{"_index":25,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":27,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["nestjs/jwt",{"_index":206,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"dependencies.html":{}}}],["nestjs/mapped",{"_index":694,"title":{},"body":{"dependencies.html":{}}}],["nestjs/microservices",{"_index":119,"title":{},"body":{"controllers/AuthController.html":{},"controllers/ProductMicroController.html":{},"controllers/UserMicroController.html":{},"dependencies.html":{}}}],["nestjs/mongoose",{"_index":29,"title":{},"body":{"modules/AppModule.html":{},"classes/Product.html":{},"modules/ProductModule.html":{},"injectables/ProductService.html":{},"dependencies.html":{}}}],["nestjs/passport",{"_index":317,"title":{},"body":{"injectables/JwtStrategy.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":698,"title":{},"body":{"dependencies.html":{}}}],["nestjs/swagger",{"_index":121,"title":{},"body":{"controllers/AuthController.html":{},"classes/CreateDto.html":{},"classes/LoginDto.html":{},"classes/OrderDto.html":{},"controllers/OrdersController.html":{},"controllers/ProductController.html":{},"classes/RegisterDto.html":{},"classes/UpdateDto.html":{},"classes/UpdateProfileDto.html":{},"controllers/UserController.html":{},"controllers/UserMicroController.html":{},"dependencies.html":{}}}],["nestjs/typeorm",{"_index":31,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/OrdersModule.html":{},"injectables/OrdersService.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["new",{"_index":134,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/OrdersService.html":{},"controllers/ProductController.html":{},"controllers/ProductMicroController.html":{},"injectables/ProductService.html":{},"coverage.html":{}}}],["notfoundexception",{"_index":116,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["npm",{"_index":746,"title":{},"body":{"index.html":{}}}],["null",{"_index":565,"title":{},"body":{"injectables/ProductService.html":{}}}],["nullable",{"_index":196,"title":{},"body":{"entities/AuthEntity.html":{}}}],["number",{"_index":93,"title":{},"body":{"controllers/AuthController.html":{},"entities/AuthEntity.html":{},"entities/AuthPass.html":{},"injectables/AuthService.html":{},"classes/CreateDto.html":{},"classes/OrderDto.html":{},"entities/OrdersEntity.html":{},"classes/Product.html":{},"controllers/ProductController.html":{},"controllers/ProductMicroController.html":{},"injectables/ProductService.html":{},"classes/ResponseModel.html":{},"classes/UpdateDto.html":{},"controllers/UserController.html":{},"controllers/UserMicroController.html":{},"injectables/UserService.html":{}}}],["object",{"_index":488,"title":{},"body":{"controllers/ProductMicroController.html":{}}}],["observable",{"_index":111,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["ondelete",{"_index":363,"title":{},"body":{"entities/OrdersEntity.html":{}}}],["one",{"_index":574,"title":{},"body":{"classes/RegisterDto.html":{}}}],["onetomany",{"_index":191,"title":{},"body":{"entities/AuthEntity.html":{}}}],["onetomany(undefined",{"_index":180,"title":{},"body":{"entities/AuthEntity.html":{}}}],["onetoone",{"_index":192,"title":{},"body":{"entities/AuthEntity.html":{}}}],["onetoone(undefined",{"_index":165,"title":{},"body":{"entities/AuthEntity.html":{}}}],["optional",{"_index":99,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CreateDto.html":{},"injectables/JwtStrategy.html":{},"controllers/OrdersController.html":{},"injectables/OrdersService.html":{},"classes/Product.html":{},"controllers/ProductController.html":{},"controllers/ProductMicroController.html":{},"injectables/ProductService.html":{},"classes/ResponseModel.html":{},"classes/UpdateDto.html":{},"classes/UpdateProfileDto.html":{},"controllers/UserController.html":{},"controllers/UserMicroController.html":{},"injectables/UserService.html":{}}}],["order",{"_index":181,"title":{},"body":{"entities/AuthEntity.html":{},"controllers/OrdersController.html":{},"injectables/OrdersService.html":{}}}],["order(@body",{"_index":357,"title":{},"body":{"controllers/OrdersController.html":{}}}],["order(orderdto",{"_index":349,"title":{},"body":{"controllers/OrdersController.html":{},"injectables/OrdersService.html":{}}}],["order.auth",{"_index":182,"title":{},"body":{"entities/AuthEntity.html":{}}}],["order.price",{"_index":399,"title":{},"body":{"injectables/OrdersService.html":{}}}],["order.product_id",{"_index":395,"title":{},"body":{"injectables/OrdersService.html":{}}}],["order.product_name",{"_index":397,"title":{},"body":{"injectables/OrdersService.html":{}}}],["order.quantity",{"_index":401,"title":{},"body":{"injectables/OrdersService.html":{}}}],["orderdto",{"_index":335,"title":{"classes/OrderDto.html":{}},"body":{"classes/OrderDto.html":{},"controllers/OrdersController.html":{},"injectables/OrdersService.html":{},"coverage.html":{}}}],["orderdto.price",{"_index":400,"title":{},"body":{"injectables/OrdersService.html":{}}}],["orderdto.product_id",{"_index":396,"title":{},"body":{"injectables/OrdersService.html":{}}}],["orderdto.product_name",{"_index":398,"title":{},"body":{"injectables/OrdersService.html":{}}}],["orderdto.quantity",{"_index":402,"title":{},"body":{"injectables/OrdersService.html":{}}}],["orders",{"_index":158,"title":{},"body":{"entities/AuthEntity.html":{},"controllers/OrdersController.html":{}}}],["orders.controller",{"_index":384,"title":{},"body":{"modules/OrdersModule.html":{}}}],["orders.entity",{"_index":194,"title":{},"body":{"entities/AuthEntity.html":{}}}],["orders.service",{"_index":353,"title":{},"body":{"controllers/OrdersController.html":{},"modules/OrdersModule.html":{}}}],["orders/orders.module",{"_index":40,"title":{},"body":{"modules/AppModule.html":{}}}],["orderscontroller",{"_index":345,"title":{"controllers/OrdersController.html":{}},"body":{"controllers/OrdersController.html":{},"modules/OrdersModule.html":{},"coverage.html":{}}}],["ordersentity",{"_index":38,"title":{"entities/OrdersEntity.html":{}},"body":{"modules/AppModule.html":{},"entities/AuthEntity.html":{},"entities/OrdersEntity.html":{},"injectables/OrdersService.html":{},"coverage.html":{}}}],["ordersmodule",{"_index":8,"title":{"modules/OrdersModule.html":{}},"body":{"modules/AppModule.html":{},"modules/OrdersModule.html":{},"modules.html":{},"overview.html":{}}}],["ordersservice",{"_index":352,"title":{"injectables/OrdersService.html":{}},"body":{"controllers/OrdersController.html":{},"modules/OrdersModule.html":{},"injectables/OrdersService.html":{},"coverage.html":{},"overview.html":{}}}],["out",{"_index":13,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/OrdersModule.html":{},"modules/ProductModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["overview",{"_index":770,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":691,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["paid",{"_index":360,"title":{},"body":{"entities/OrdersEntity.html":{}}}],["param",{"_index":263,"title":{},"body":{"injectables/AuthService.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"controllers/UserController.html":{}}}],["param('id",{"_index":636,"title":{},"body":{"controllers/UserController.html":{}}}],["parameters",{"_index":97,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"controllers/OrdersController.html":{},"injectables/OrdersService.html":{},"controllers/ProductController.html":{},"controllers/ProductMicroController.html":{},"injectables/ProductService.html":{},"classes/ResponseModel.html":{},"controllers/UserController.html":{},"controllers/UserMicroController.html":{},"injectables/UserService.html":{}}}],["pass.entity",{"_index":35,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"entities/AuthEntity.html":{},"modules/AuthModule.html":{},"modules/UserModule.html":{}}}],["pass.entity.ts",{"_index":213,"title":{},"body":{"entities/AuthPass.html":{},"coverage.html":{}}}],["pass.entity.ts:10",{"_index":217,"title":{},"body":{"entities/AuthPass.html":{}}}],["pass.entity.ts:13",{"_index":218,"title":{},"body":{"entities/AuthPass.html":{}}}],["pass.entity.ts:16",{"_index":216,"title":{},"body":{"entities/AuthPass.html":{}}}],["pass.entity.ts:19",{"_index":219,"title":{},"body":{"entities/AuthPass.html":{}}}],["passport",{"_index":314,"title":{},"body":{"injectables/JwtStrategy.html":{},"dependencies.html":{}}}],["passportstrategy",{"_index":316,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["passportstrategy(strategy",{"_index":319,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["password",{"_index":58,"title":{},"body":{"modules/AppModule.html":{},"entities/AuthPass.html":{},"injectables/AuthService.html":{},"classes/LoginDto.html":{},"classes/RegisterDto.html":{}}}],["payload",{"_index":311,"title":{},"body":{"injectables/JwtStrategy.html":{},"controllers/ProductMicroController.html":{},"controllers/UserMicroController.html":{}}}],["payload.updateprofiledto",{"_index":650,"title":{},"body":{"controllers/UserMicroController.html":{}}}],["payload['image",{"_index":499,"title":{},"body":{"controllers/ProductMicroController.html":{}}}],["payload['title",{"_index":501,"title":{},"body":{"controllers/ProductMicroController.html":{}}}],["pg",{"_index":726,"title":{},"body":{"dependencies.html":{}}}],["phone_number",{"_index":159,"title":{},"body":{"entities/AuthEntity.html":{},"classes/UpdateProfileDto.html":{},"injectables/UserService.html":{}}}],["placeholder",{"_index":410,"title":{},"body":{"classes/Product.html":{}}}],["port",{"_index":54,"title":{},"body":{"modules/AppModule.html":{}}}],["post",{"_index":117,"title":{},"body":{"controllers/AuthController.html":{},"controllers/OrdersController.html":{},"controllers/ProductController.html":{},"controllers/ProductMicroController.html":{}}}],["post('login",{"_index":144,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('login')@messagepattern({name",{"_index":103,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('register",{"_index":130,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('register')@messagepattern({name",{"_index":108,"title":{},"body":{"controllers/AuthController.html":{}}}],["post()@messagepattern({name",{"_index":473,"title":{},"body":{"controllers/ProductMicroController.html":{}}}],["postgres",{"_index":51,"title":{},"body":{"modules/AppModule.html":{}}}],["prefix",{"_index":76,"title":{},"body":{"controllers/AuthController.html":{},"controllers/OrdersController.html":{},"controllers/ProductController.html":{},"controllers/ProductMicroController.html":{},"controllers/UserController.html":{},"controllers/UserMicroController.html":{}}}],["price",{"_index":337,"title":{},"body":{"classes/OrderDto.html":{},"entities/OrdersEntity.html":{}}}],["primarygeneratedcolumn",{"_index":177,"title":{},"body":{"entities/AuthEntity.html":{},"entities/AuthPass.html":{},"entities/OrdersEntity.html":{}}}],["private",{"_index":262,"title":{},"body":{"injectables/AuthService.html":{},"injectables/OrdersService.html":{},"injectables/ProductService.html":{},"injectables/UserService.html":{}}}],["process.env.jwt_secret",{"_index":212,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{}}}],["product",{"_index":405,"title":{"classes/Product.html":{}},"body":{"classes/Product.html":{},"controllers/ProductController.html":{},"controllers/ProductMicroController.html":{},"modules/ProductModule.html":{},"injectables/ProductService.html":{},"coverage.html":{}}}],["product.controller",{"_index":507,"title":{},"body":{"modules/ProductModule.html":{}}}],["product.id",{"_index":463,"title":{},"body":{"controllers/ProductController.html":{}}}],["product.image",{"_index":457,"title":{},"body":{"controllers/ProductController.html":{},"controllers/ProductMicroController.html":{}}}],["product.likes",{"_index":459,"title":{},"body":{"controllers/ProductController.html":{},"controllers/ProductMicroController.html":{}}}],["product.name",{"_index":509,"title":{},"body":{"modules/ProductModule.html":{}}}],["product.service",{"_index":447,"title":{},"body":{"controllers/ProductController.html":{},"controllers/ProductMicroController.html":{},"modules/ProductModule.html":{}}}],["product.title",{"_index":455,"title":{},"body":{"controllers/ProductController.html":{},"controllers/ProductMicroController.html":{}}}],["product/product.module",{"_index":41,"title":{},"body":{"modules/AppModule.html":{}}}],["product_created",{"_index":474,"title":{},"body":{"controllers/ProductMicroController.html":{}}}],["product_deleted",{"_index":485,"title":{},"body":{"controllers/ProductMicroController.html":{}}}],["product_id",{"_index":338,"title":{},"body":{"classes/OrderDto.html":{},"entities/OrdersEntity.html":{}}}],["product_name",{"_index":339,"title":{},"body":{"classes/OrderDto.html":{},"entities/OrdersEntity.html":{}}}],["product_updated",{"_index":490,"title":{},"body":{"controllers/ProductMicroController.html":{}}}],["productcontroller",{"_index":422,"title":{"controllers/ProductController.html":{}},"body":{"controllers/ProductController.html":{},"modules/ProductModule.html":{},"coverage.html":{}}}],["productdeleted",{"_index":428,"title":{},"body":{"controllers/ProductController.html":{}}}],["productdeleted(@param('id",{"_index":464,"title":{},"body":{"controllers/ProductController.html":{}}}],["productdeleted(id",{"_index":436,"title":{},"body":{"controllers/ProductController.html":{}}}],["productdeleteredis",{"_index":471,"title":{},"body":{"controllers/ProductMicroController.html":{}}}],["productdeleteredis(id",{"_index":483,"title":{},"body":{"controllers/ProductMicroController.html":{}}}],["productdocument",{"_index":417,"title":{},"body":{"classes/Product.html":{},"injectables/ProductService.html":{},"miscellaneous/typealiases.html":{}}}],["production",{"_index":754,"title":{},"body":{"index.html":{}}}],["productmicrocontroller",{"_index":466,"title":{"controllers/ProductMicroController.html":{}},"body":{"controllers/ProductMicroController.html":{},"modules/ProductModule.html":{},"coverage.html":{}}}],["productmodel",{"_index":515,"title":{},"body":{"injectables/ProductService.html":{}}}],["productmodule",{"_index":9,"title":{"modules/ProductModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ProductModule.html":{},"modules.html":{},"overview.html":{}}}],["products",{"_index":424,"title":{},"body":{"controllers/ProductController.html":{},"injectables/ProductService.html":{}}}],["productschema",{"_index":420,"title":{},"body":{"classes/Product.html":{},"modules/ProductModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["productservice",{"_index":446,"title":{"injectables/ProductService.html":{}},"body":{"controllers/ProductController.html":{},"controllers/ProductMicroController.html":{},"modules/ProductModule.html":{},"injectables/ProductService.html":{},"coverage.html":{},"overview.html":{}}}],["productupdated",{"_index":429,"title":{},"body":{"controllers/ProductController.html":{}}}],["productupdated(@param('id",{"_index":461,"title":{},"body":{"controllers/ProductController.html":{}}}],["productupdated(id",{"_index":439,"title":{},"body":{"controllers/ProductController.html":{}}}],["productupdatedredis",{"_index":472,"title":{},"body":{"controllers/ProductMicroController.html":{}}}],["productupdatedredis(payload",{"_index":487,"title":{},"body":{"controllers/ProductMicroController.html":{}}}],["profile",{"_index":661,"title":{},"body":{"injectables/UserService.html":{}}}],["profile.dto",{"_index":629,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["profile.dto.ts",{"_index":601,"title":{},"body":{"classes/UpdateProfileDto.html":{},"coverage.html":{}}}],["profile.dto.ts:15",{"_index":616,"title":{},"body":{"classes/UpdateProfileDto.html":{}}}],["profile.dto.ts:18",{"_index":602,"title":{},"body":{"classes/UpdateProfileDto.html":{}}}],["profile.dto.ts:6",{"_index":603,"title":{},"body":{"classes/UpdateProfileDto.html":{}}}],["profile.dto.ts:9",{"_index":604,"title":{},"body":{"classes/UpdateProfileDto.html":{}}}],["profile_image",{"_index":160,"title":{},"body":{"entities/AuthEntity.html":{},"injectables/UserService.html":{}}}],["promise",{"_index":91,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/ProductService.html":{},"controllers/UserController.html":{},"controllers/UserMicroController.html":{},"injectables/UserService.html":{}}}],["promise(async",{"_index":545,"title":{},"body":{"injectables/ProductService.html":{}}}],["prop",{"_index":412,"title":{},"body":{"classes/Product.html":{}}}],["prop({default",{"_index":409,"title":{},"body":{"classes/Product.html":{}}}],["prop({required",{"_index":407,"title":{},"body":{"classes/Product.html":{}}}],["properties",{"_index":152,"title":{"properties.html":{}},"body":{"entities/AuthEntity.html":{},"entities/AuthPass.html":{},"classes/CreateDto.html":{},"classes/LoginDto.html":{},"classes/OrderDto.html":{},"entities/OrdersEntity.html":{},"classes/Product.html":{},"classes/RegisterDto.html":{},"classes/ResponseModel.html":{},"classes/UpdateDto.html":{},"classes/UpdateProfileDto.html":{},"properties.html":{}}}],["provide",{"_index":66,"title":{},"body":{"modules/AppModule.html":{}}}],["providers",{"_index":65,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/OrdersModule.html":{},"modules/ProductModule.html":{},"modules/UserModule.html":{}}}],["put",{"_index":443,"title":{},"body":{"controllers/ProductController.html":{},"controllers/ProductMicroController.html":{},"controllers/UserController.html":{},"controllers/UserMicroController.html":{}}}],["put(':id",{"_index":440,"title":{},"body":{"controllers/ProductController.html":{}}}],["put('profile:id",{"_index":626,"title":{},"body":{"controllers/UserController.html":{}}}],["put('update",{"_index":648,"title":{},"body":{"controllers/UserMicroController.html":{}}}],["put('update')@messagepattern({name",{"_index":644,"title":{},"body":{"controllers/UserMicroController.html":{}}}],["put()@messagepattern({name",{"_index":489,"title":{},"body":{"controllers/ProductMicroController.html":{}}}],["quantity",{"_index":340,"title":{},"body":{"classes/OrderDto.html":{},"entities/OrdersEntity.html":{}}}],["readonly",{"_index":129,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"controllers/OrdersController.html":{},"injectables/OrdersService.html":{},"injectables/ProductService.html":{},"controllers/UserController.html":{},"controllers/UserMicroController.html":{},"injectables/UserService.html":{}}}],["redis",{"_index":711,"title":{},"body":{"dependencies.html":{}}}],["reflect",{"_index":728,"title":{},"body":{"dependencies.html":{}}}],["register",{"_index":84,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["register(@body",{"_index":131,"title":{},"body":{"controllers/AuthController.html":{}}}],["register(authentity",{"_index":251,"title":{},"body":{"injectables/AuthService.html":{}}}],["register(registerdto",{"_index":106,"title":{},"body":{"controllers/AuthController.html":{}}}],["registerdto",{"_index":107,"title":{"classes/RegisterDto.html":{}},"body":{"controllers/AuthController.html":{},"classes/RegisterDto.html":{},"coverage.html":{}}}],["registerdto.email",{"_index":138,"title":{},"body":{"controllers/AuthController.html":{}}}],["registerdto.password",{"_index":140,"title":{},"body":{"controllers/AuthController.html":{}}}],["registerdto.username",{"_index":136,"title":{},"body":{"controllers/AuthController.html":{}}}],["reject",{"_index":547,"title":{},"body":{"injectables/ProductService.html":{}}}],["reject(new",{"_index":553,"title":{},"body":{"injectables/ProductService.html":{}}}],["repository",{"_index":235,"title":{},"body":{"injectables/AuthService.html":{},"injectables/OrdersService.html":{},"injectables/UserService.html":{}}}],["required",{"_index":419,"title":{},"body":{"classes/Product.html":{}}}],["requires",{"_index":250,"title":{},"body":{"injectables/AuthService.html":{}}}],["reset",{"_index":12,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/OrdersModule.html":{},"modules/ProductModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["resgister",{"_index":253,"title":{},"body":{"injectables/AuthService.html":{}}}],["resolve",{"_index":546,"title":{},"body":{"injectables/ProductService.html":{}}}],["resolve(result",{"_index":550,"title":{},"body":{"injectables/ProductService.html":{}}}],["resolve(updatedproduct",{"_index":561,"title":{},"body":{"injectables/ProductService.html":{}}}],["responsemodel",{"_index":113,"title":{"classes/ResponseModel.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/ResponseModel.html":{},"controllers/UserController.html":{},"controllers/UserMicroController.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["result",{"_index":267,"title":{},"body":{"injectables/AuthService.html":{},"injectables/OrdersService.html":{},"controllers/ProductController.html":{},"controllers/ProductMicroController.html":{},"injectables/ProductService.html":{},"classes/ResponseModel.html":{},"injectables/UserService.html":{}}}],["results",{"_index":70,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"entities/AuthEntity.html":{},"modules/AuthModule.html":{},"entities/AuthPass.html":{},"injectables/AuthService.html":{},"classes/CreateDto.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/OrderDto.html":{},"controllers/OrdersController.html":{},"entities/OrdersEntity.html":{},"modules/OrdersModule.html":{},"injectables/OrdersService.html":{},"classes/Product.html":{},"controllers/ProductController.html":{},"controllers/ProductMicroController.html":{},"modules/ProductModule.html":{},"injectables/ProductService.html":{},"classes/RegisterDto.html":{},"classes/ResponseModel.html":{},"classes/UpdateDto.html":{},"classes/UpdateProfileDto.html":{},"controllers/UserController.html":{},"controllers/UserMicroController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":142,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"controllers/OrdersController.html":{},"injectables/OrdersService.html":{},"controllers/ProductController.html":{},"controllers/ProductMicroController.html":{},"injectables/ProductService.html":{},"controllers/UserController.html":{},"controllers/UserMicroController.html":{},"injectables/UserService.html":{}}}],["returns",{"_index":90,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"controllers/OrdersController.html":{},"injectables/OrdersService.html":{},"controllers/ProductController.html":{},"controllers/ProductMicroController.html":{},"injectables/ProductService.html":{},"controllers/UserController.html":{},"controllers/UserMicroController.html":{},"injectables/UserService.html":{}}}],["rimraf",{"_index":731,"title":{},"body":{"dependencies.html":{}}}],["run",{"_index":750,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":112,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"dependencies.html":{}}}],["salt",{"_index":224,"title":{},"body":{"entities/AuthPass.html":{}}}],["save",{"_index":520,"title":{},"body":{"injectables/ProductService.html":{}}}],["schema",{"_index":415,"title":{},"body":{"classes/Product.html":{},"modules/ProductModule.html":{}}}],["schemafactory",{"_index":416,"title":{},"body":{"classes/Product.html":{}}}],["schemafactory.createforclass(product",{"_index":421,"title":{},"body":{"classes/Product.html":{},"miscellaneous/variables.html":{}}}],["schemas/product.model",{"_index":445,"title":{},"body":{"controllers/ProductController.html":{},"modules/ProductModule.html":{},"injectables/ProductService.html":{}}}],["secret",{"_index":211,"title":{},"body":{"modules/AuthModule.html":{}}}],["secretorkey",{"_index":323,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["shahbaz",{"_index":764,"title":{},"body":{"index.html":{},"properties.html":{}}}],["shop",{"_index":741,"title":{},"body":{"index.html":{},"properties.html":{}}}],["source",{"_index":15,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"entities/AuthEntity.html":{},"modules/AuthModule.html":{},"entities/AuthPass.html":{},"injectables/AuthService.html":{},"classes/CreateDto.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/OrderDto.html":{},"controllers/OrdersController.html":{},"entities/OrdersEntity.html":{},"modules/OrdersModule.html":{},"injectables/OrdersService.html":{},"classes/Product.html":{},"controllers/ProductController.html":{},"controllers/ProductMicroController.html":{},"modules/ProductModule.html":{},"injectables/ProductService.html":{},"classes/RegisterDto.html":{},"classes/ResponseModel.html":{},"classes/UpdateDto.html":{},"classes/UpdateProfileDto.html":{},"controllers/UserController.html":{},"controllers/UserMicroController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["src/.../main.ts",{"_index":737,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../product.model.ts",{"_index":782,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/app.module.ts",{"_index":17,"title":{},"body":{"modules/AppModule.html":{}}}],["src/auth/auth.controller.ts",{"_index":75,"title":{},"body":{"controllers/AuthController.html":{},"coverage.html":{}}}],["src/auth/auth.controller.ts:19",{"_index":110,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:31",{"_index":105,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:37",{"_index":96,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:43",{"_index":89,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.module.ts",{"_index":200,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/auth/auth.service.ts",{"_index":231,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/auth/auth.service.ts:14",{"_index":237,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:26",{"_index":252,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:50",{"_index":248,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:79",{"_index":240,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:93",{"_index":243,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/jwt.strategy.ts",{"_index":306,"title":{},"body":{"injectables/JwtStrategy.html":{},"coverage.html":{}}}],["src/auth/jwt.strategy.ts:10",{"_index":308,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/auth/jwt.strategy.ts:17",{"_index":310,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/dtos/login.dto.ts",{"_index":327,"title":{},"body":{"classes/LoginDto.html":{},"coverage.html":{}}}],["src/dtos/login.dto.ts:12",{"_index":331,"title":{},"body":{"classes/LoginDto.html":{}}}],["src/dtos/login.dto.ts:7",{"_index":329,"title":{},"body":{"classes/LoginDto.html":{}}}],["src/dtos/order.dto",{"_index":351,"title":{},"body":{"controllers/OrdersController.html":{},"injectables/OrdersService.html":{}}}],["src/dtos/order.dto.ts",{"_index":336,"title":{},"body":{"classes/OrderDto.html":{},"coverage.html":{}}}],["src/dtos/order.dto.ts:11",{"_index":344,"title":{},"body":{"classes/OrderDto.html":{}}}],["src/dtos/order.dto.ts:14",{"_index":341,"title":{},"body":{"classes/OrderDto.html":{}}}],["src/dtos/order.dto.ts:5",{"_index":342,"title":{},"body":{"classes/OrderDto.html":{}}}],["src/dtos/order.dto.ts:8",{"_index":343,"title":{},"body":{"classes/OrderDto.html":{}}}],["src/dtos/product.dto.ts",{"_index":293,"title":{},"body":{"classes/CreateDto.html":{},"classes/UpdateDto.html":{},"coverage.html":{}}}],["src/dtos/product.dto.ts:12",{"_index":298,"title":{},"body":{"classes/CreateDto.html":{}}}],["src/dtos/product.dto.ts:14",{"_index":299,"title":{},"body":{"classes/CreateDto.html":{}}}],["src/dtos/product.dto.ts:18",{"_index":595,"title":{},"body":{"classes/UpdateDto.html":{}}}],["src/dtos/product.dto.ts:22",{"_index":598,"title":{},"body":{"classes/UpdateDto.html":{}}}],["src/dtos/product.dto.ts:26",{"_index":596,"title":{},"body":{"classes/UpdateDto.html":{}}}],["src/dtos/product.dto.ts:28",{"_index":597,"title":{},"body":{"classes/UpdateDto.html":{}}}],["src/dtos/product.dto.ts:8",{"_index":300,"title":{},"body":{"classes/CreateDto.html":{}}}],["src/dtos/register.dto.ts",{"_index":567,"title":{},"body":{"classes/RegisterDto.html":{},"coverage.html":{}}}],["src/dtos/register.dto.ts:10",{"_index":581,"title":{},"body":{"classes/RegisterDto.html":{}}}],["src/dtos/register.dto.ts:19",{"_index":577,"title":{},"body":{"classes/RegisterDto.html":{}}}],["src/dtos/register.dto.ts:23",{"_index":568,"title":{},"body":{"classes/RegisterDto.html":{}}}],["src/dtos/update",{"_index":600,"title":{},"body":{"classes/UpdateProfileDto.html":{},"coverage.html":{}}}],["src/entities/auth",{"_index":203,"title":{},"body":{"modules/AuthModule.html":{},"entities/AuthPass.html":{},"modules/UserModule.html":{},"coverage.html":{}}}],["src/entities/auth.entity",{"_index":204,"title":{},"body":{"modules/AuthModule.html":{},"modules/OrdersModule.html":{},"injectables/OrdersService.html":{},"modules/UserModule.html":{}}}],["src/entities/auth.entity.ts",{"_index":151,"title":{},"body":{"entities/AuthEntity.html":{},"coverage.html":{}}}],["src/entities/auth.entity.ts:11",{"_index":178,"title":{},"body":{"entities/AuthEntity.html":{}}}],["src/entities/auth.entity.ts:14",{"_index":189,"title":{},"body":{"entities/AuthEntity.html":{}}}],["src/entities/auth.entity.ts:17",{"_index":175,"title":{},"body":{"entities/AuthEntity.html":{}}}],["src/entities/auth.entity.ts:20",{"_index":176,"title":{},"body":{"entities/AuthEntity.html":{}}}],["src/entities/auth.entity.ts:23",{"_index":179,"title":{},"body":{"entities/AuthEntity.html":{}}}],["src/entities/auth.entity.ts:26",{"_index":184,"title":{},"body":{"entities/AuthEntity.html":{}}}],["src/entities/auth.entity.ts:29",{"_index":164,"title":{},"body":{"entities/AuthEntity.html":{}}}],["src/entities/auth.entity.ts:32",{"_index":185,"title":{},"body":{"entities/AuthEntity.html":{}}}],["src/entities/auth.entity.ts:35",{"_index":173,"title":{},"body":{"entities/AuthEntity.html":{}}}],["src/entities/auth.entity.ts:38",{"_index":187,"title":{},"body":{"entities/AuthEntity.html":{}}}],["src/entities/auth.entity.ts:45",{"_index":170,"title":{},"body":{"entities/AuthEntity.html":{}}}],["src/entities/auth.entity.ts:51",{"_index":183,"title":{},"body":{"entities/AuthEntity.html":{}}}],["src/entities/orders.entity",{"_index":390,"title":{},"body":{"injectables/OrdersService.html":{}}}],["src/entities/orders.entity.ts",{"_index":359,"title":{},"body":{"entities/OrdersEntity.html":{},"coverage.html":{}}}],["src/entities/orders.entity.ts:12",{"_index":374,"title":{},"body":{"entities/OrdersEntity.html":{}}}],["src/entities/orders.entity.ts:15",{"_index":375,"title":{},"body":{"entities/OrdersEntity.html":{}}}],["src/entities/orders.entity.ts:18",{"_index":376,"title":{},"body":{"entities/OrdersEntity.html":{}}}],["src/entities/orders.entity.ts:21",{"_index":373,"title":{},"body":{"entities/OrdersEntity.html":{}}}],["src/entities/orders.entity.ts:24",{"_index":370,"title":{},"body":{"entities/OrdersEntity.html":{}}}],["src/entities/orders.entity.ts:27",{"_index":365,"title":{},"body":{"entities/OrdersEntity.html":{}}}],["src/entities/orders.entity.ts:30",{"_index":377,"title":{},"body":{"entities/OrdersEntity.html":{}}}],["src/entities/orders.entity.ts:35",{"_index":364,"title":{},"body":{"entities/OrdersEntity.html":{}}}],["src/entities/orders.entity.ts:9",{"_index":366,"title":{},"body":{"entities/OrdersEntity.html":{}}}],["src/interface/response.model",{"_index":114,"title":{},"body":{"controllers/AuthController.html":{},"controllers/UserMicroController.html":{}}}],["src/interface/response.model.ts",{"_index":587,"title":{},"body":{"classes/ResponseModel.html":{},"coverage.html":{}}}],["src/interface/response.model.ts:2",{"_index":591,"title":{},"body":{"classes/ResponseModel.html":{}}}],["src/interface/response.model.ts:3",{"_index":590,"title":{},"body":{"classes/ResponseModel.html":{}}}],["src/interface/response.model.ts:4",{"_index":589,"title":{},"body":{"classes/ResponseModel.html":{}}}],["src/main.ts",{"_index":682,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/orders/orders.controller.ts",{"_index":346,"title":{},"body":{"controllers/OrdersController.html":{},"coverage.html":{}}}],["src/orders/orders.controller.ts:12",{"_index":348,"title":{},"body":{"controllers/OrdersController.html":{}}}],["src/orders/orders.controller.ts:17",{"_index":350,"title":{},"body":{"controllers/OrdersController.html":{}}}],["src/orders/orders.module.ts",{"_index":383,"title":{},"body":{"modules/OrdersModule.html":{}}}],["src/orders/orders.service.ts",{"_index":385,"title":{},"body":{"injectables/OrdersService.html":{},"coverage.html":{}}}],["src/orders/orders.service.ts:16",{"_index":387,"title":{},"body":{"injectables/OrdersService.html":{}}}],["src/orders/orders.service.ts:21",{"_index":389,"title":{},"body":{"injectables/OrdersService.html":{}}}],["src/orders/orders.service.ts:9",{"_index":386,"title":{},"body":{"injectables/OrdersService.html":{}}}],["src/product/product",{"_index":467,"title":{},"body":{"controllers/ProductMicroController.html":{},"coverage.html":{}}}],["src/product/product.controller.ts",{"_index":423,"title":{},"body":{"controllers/ProductController.html":{},"coverage.html":{}}}],["src/product/product.controller.ts:13",{"_index":432,"title":{},"body":{"controllers/ProductController.html":{}}}],["src/product/product.controller.ts:18",{"_index":435,"title":{},"body":{"controllers/ProductController.html":{}}}],["src/product/product.controller.ts:23",{"_index":431,"title":{},"body":{"controllers/ProductController.html":{}}}],["src/product/product.controller.ts:33",{"_index":441,"title":{},"body":{"controllers/ProductController.html":{}}}],["src/product/product.controller.ts:38",{"_index":438,"title":{},"body":{"controllers/ProductController.html":{}}}],["src/product/product.module.ts",{"_index":505,"title":{},"body":{"modules/ProductModule.html":{}}}],["src/product/product.service.ts",{"_index":510,"title":{},"body":{"injectables/ProductService.html":{},"coverage.html":{}}}],["src/product/product.service.ts:20",{"_index":525,"title":{},"body":{"injectables/ProductService.html":{}}}],["src/product/product.service.ts:36",{"_index":526,"title":{},"body":{"injectables/ProductService.html":{}}}],["src/product/product.service.ts:51",{"_index":519,"title":{},"body":{"injectables/ProductService.html":{}}}],["src/product/product.service.ts:68",{"_index":524,"title":{},"body":{"injectables/ProductService.html":{}}}],["src/product/product.service.ts:78",{"_index":528,"title":{},"body":{"injectables/ProductService.html":{}}}],["src/product/product.service.ts:9",{"_index":517,"title":{},"body":{"injectables/ProductService.html":{}}}],["src/product/product.service.ts:96",{"_index":522,"title":{},"body":{"injectables/ProductService.html":{}}}],["src/schemas/product.model",{"_index":492,"title":{},"body":{"controllers/ProductMicroController.html":{}}}],["src/schemas/product.model.ts",{"_index":406,"title":{},"body":{"classes/Product.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/schemas/product.model.ts:11",{"_index":414,"title":{},"body":{"classes/Product.html":{}}}],["src/schemas/product.model.ts:14",{"_index":411,"title":{},"body":{"classes/Product.html":{}}}],["src/schemas/product.model.ts:17",{"_index":413,"title":{},"body":{"classes/Product.html":{}}}],["src/schemas/product.model.ts:8",{"_index":408,"title":{},"body":{"classes/Product.html":{}}}],["src/user/user",{"_index":639,"title":{},"body":{"controllers/UserMicroController.html":{},"coverage.html":{}}}],["src/user/user.controller.ts",{"_index":619,"title":{},"body":{"controllers/UserController.html":{},"coverage.html":{}}}],["src/user/user.controller.ts:13",{"_index":624,"title":{},"body":{"controllers/UserController.html":{}}}],["src/user/user.controller.ts:18",{"_index":627,"title":{},"body":{"controllers/UserController.html":{}}}],["src/user/user.module.ts",{"_index":653,"title":{},"body":{"modules/UserModule.html":{}}}],["src/user/user.service.ts",{"_index":655,"title":{},"body":{"injectables/UserService.html":{},"coverage.html":{}}}],["src/user/user.service.ts:15",{"_index":657,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/user.service.ts:39",{"_index":658,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/user.service.ts:9",{"_index":656,"title":{},"body":{"injectables/UserService.html":{}}}],["start",{"_index":614,"title":{},"body":{"classes/UpdateProfileDto.html":{},"index.html":{}}}],["start:dev",{"_index":753,"title":{},"body":{"index.html":{}}}],["start:prodtest",{"_index":755,"title":{},"body":{"index.html":{}}}],["started",{"_index":739,"title":{"index.html":{}},"body":{}}],["statements",{"_index":675,"title":{},"body":{"coverage.html":{}}}],["store",{"_index":712,"title":{},"body":{"dependencies.html":{}}}],["strategy",{"_index":313,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["string",{"_index":162,"title":{},"body":{"entities/AuthEntity.html":{},"entities/AuthPass.html":{},"classes/CreateDto.html":{},"classes/LoginDto.html":{},"classes/OrderDto.html":{},"entities/OrdersEntity.html":{},"classes/Product.html":{},"classes/RegisterDto.html":{},"classes/UpdateDto.html":{},"classes/UpdateProfileDto.html":{}}}],["success",{"_index":266,"title":{},"body":{"injectables/AuthService.html":{},"classes/ResponseModel.html":{},"injectables/UserService.html":{}}}],["super",{"_index":320,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["support",{"_index":767,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":768,"title":{},"body":{"modules.html":{}}}],["synchronize",{"_index":63,"title":{},"body":{"modules/AppModule.html":{}}}],["table",{"_index":690,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":689,"title":{},"body":{"coverage.html":{}}}],["test",{"_index":758,"title":{},"body":{"index.html":{}}}],["test:covcontact",{"_index":761,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":760,"title":{},"body":{"index.html":{}}}],["tests",{"_index":757,"title":{},"body":{"index.html":{}}}],["this.authrepository.find",{"_index":290,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.authrepository.findone",{"_index":278,"title":{},"body":{"injectables/AuthService.html":{},"injectables/OrdersService.html":{},"injectables/UserService.html":{}}}],["this.authrepository.findoneby",{"_index":394,"title":{},"body":{"injectables/OrdersService.html":{}}}],["this.authrepository.save(finduser",{"_index":671,"title":{},"body":{"injectables/UserService.html":{}}}],["this.authrepository.save(user",{"_index":404,"title":{},"body":{"injectables/OrdersService.html":{}}}],["this.authservice.findbyid(id",{"_index":147,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.findbyid(payload.id",{"_index":324,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["this.authservice.getallusers",{"_index":149,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.login(login",{"_index":146,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.register(user",{"_index":143,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.cachemanager.get('cache",{"_index":539,"title":{},"body":{"injectables/ProductService.html":{}}}],["this.cachemanager.set('cache",{"_index":542,"title":{},"body":{"injectables/ProductService.html":{}}}],["this.cachemanager.set('cache_getall",{"_index":536,"title":{},"body":{"injectables/ProductService.html":{}}}],["this.code",{"_index":594,"title":{},"body":{"classes/ResponseModel.html":{}}}],["this.jwtservice.sign",{"_index":269,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.jwtservice.signasync",{"_index":285,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.ordersservice.getorder",{"_index":356,"title":{},"body":{"controllers/OrdersController.html":{}}}],["this.ordersservice.order(orderdto",{"_index":358,"title":{},"body":{"controllers/OrdersController.html":{}}}],["this.password",{"_index":227,"title":{},"body":{"entities/AuthPass.html":{}}}],["this.productmodel(product).save",{"_index":549,"title":{},"body":{"injectables/ProductService.html":{}}}],["this.productmodel.deleteone",{"_index":566,"title":{},"body":{"injectables/ProductService.html":{}}}],["this.productmodel.find().exec",{"_index":541,"title":{},"body":{"injectables/ProductService.html":{}}}],["this.productmodel.findone",{"_index":544,"title":{},"body":{"injectables/ProductService.html":{}}}],["this.productmodel.findoneandupdate",{"_index":559,"title":{},"body":{"injectables/ProductService.html":{}}}],["this.productservice.addproduct(createdto",{"_index":460,"title":{},"body":{"controllers/ProductController.html":{},"controllers/ProductMicroController.html":{}}}],["this.productservice.delete(id",{"_index":465,"title":{},"body":{"controllers/ProductController.html":{},"controllers/ProductMicroController.html":{}}}],["this.productservice.getall",{"_index":450,"title":{},"body":{"controllers/ProductController.html":{},"controllers/ProductMicroController.html":{}}}],["this.productservice.getone(id",{"_index":452,"title":{},"body":{"controllers/ProductController.html":{},"controllers/ProductMicroController.html":{}}}],["this.productservice.update(id",{"_index":462,"title":{},"body":{"controllers/ProductController.html":{}}}],["this.productservice.update(payload['id",{"_index":502,"title":{},"body":{"controllers/ProductMicroController.html":{}}}],["this.result",{"_index":593,"title":{},"body":{"classes/ResponseModel.html":{}}}],["this.success",{"_index":592,"title":{},"body":{"classes/ResponseModel.html":{}}}],["this.userservice.getuserprofile(id",{"_index":635,"title":{},"body":{"controllers/UserController.html":{},"controllers/UserMicroController.html":{}}}],["this.userservice.updateprofile(id",{"_index":637,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.updateprofile(payload.id",{"_index":649,"title":{},"body":{"controllers/UserMicroController.html":{}}}],["throw",{"_index":276,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["title",{"_index":296,"title":{},"body":{"classes/CreateDto.html":{},"classes/Product.html":{},"classes/UpdateDto.html":{}}}],["todo",{"_index":391,"title":{},"body":{"injectables/OrdersService.html":{}}}],["token",{"_index":268,"title":{},"body":{"injectables/AuthService.html":{}}}],["transformer",{"_index":714,"title":{},"body":{"dependencies.html":{}}}],["true",{"_index":45,"title":{},"body":{"modules/AppModule.html":{},"entities/AuthEntity.html":{},"injectables/AuthService.html":{},"classes/Product.html":{},"injectables/UserService.html":{}}}],["true})@joincolumn",{"_index":169,"title":{},"body":{"entities/AuthEntity.html":{}}}],["try",{"_index":548,"title":{},"body":{"injectables/ProductService.html":{}}}],["type",{"_index":50,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"entities/AuthEntity.html":{},"entities/AuthPass.html":{},"injectables/AuthService.html":{},"classes/CreateDto.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/OrderDto.html":{},"controllers/OrdersController.html":{},"entities/OrdersEntity.html":{},"injectables/OrdersService.html":{},"classes/Product.html":{},"controllers/ProductController.html":{},"controllers/ProductMicroController.html":{},"injectables/ProductService.html":{},"classes/RegisterDto.html":{},"classes/ResponseModel.html":{},"classes/UpdateDto.html":{},"classes/UpdateProfileDto.html":{},"controllers/UserController.html":{},"controllers/UserMicroController.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["typealiases",{"_index":780,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typeorm",{"_index":193,"title":{},"body":{"entities/AuthEntity.html":{},"entities/AuthPass.html":{},"injectables/AuthService.html":{},"entities/OrdersEntity.html":{},"injectables/OrdersService.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["typeormmodule",{"_index":30,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/OrdersModule.html":{},"modules/UserModule.html":{}}}],["typeormmodule.forfeature([authentity",{"_index":209,"title":{},"body":{"modules/AuthModule.html":{},"modules/OrdersModule.html":{},"modules/UserModule.html":{}}}],["typeormmodule.forrootasync",{"_index":48,"title":{},"body":{"modules/AppModule.html":{}}}],["types",{"_index":695,"title":{},"body":{"dependencies.html":{}}}],["types/cache",{"_index":702,"title":{},"body":{"dependencies.html":{}}}],["unauthorizedexception",{"_index":258,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["undefined",{"_index":540,"title":{},"body":{"injectables/ProductService.html":{}}}],["unique",{"_index":195,"title":{},"body":{"entities/AuthEntity.html":{},"classes/Product.html":{}}}],["unit",{"_index":756,"title":{},"body":{"index.html":{}}}],["unknown",{"_index":388,"title":{},"body":{"injectables/OrdersService.html":{},"controllers/ProductController.html":{},"controllers/ProductMicroController.html":{},"injectables/ProductService.html":{}}}],["unlicensed",{"_index":779,"title":{},"body":{"properties.html":{}}}],["update",{"_index":512,"title":{},"body":{"injectables/ProductService.html":{}}}],["update(id",{"_index":527,"title":{},"body":{"injectables/ProductService.html":{}}}],["update_user_profile",{"_index":645,"title":{},"body":{"controllers/UserMicroController.html":{}}}],["updated_at",{"_index":215,"title":{},"body":{"entities/AuthPass.html":{},"entities/OrdersEntity.html":{}}}],["updated_time",{"_index":161,"title":{},"body":{"entities/AuthEntity.html":{}}}],["updatedatecolumn",{"_index":186,"title":{},"body":{"entities/AuthEntity.html":{},"entities/AuthPass.html":{},"entities/OrdersEntity.html":{}}}],["updatedproduct",{"_index":560,"title":{},"body":{"injectables/ProductService.html":{}}}],["updatedto",{"_index":305,"title":{"classes/UpdateDto.html":{}},"body":{"classes/CreateDto.html":{},"controllers/ProductController.html":{},"controllers/ProductMicroController.html":{},"injectables/ProductService.html":{},"classes/UpdateDto.html":{},"coverage.html":{}}}],["updatedto.image",{"_index":498,"title":{},"body":{"controllers/ProductMicroController.html":{}}}],["updatedto.title",{"_index":500,"title":{},"body":{"controllers/ProductMicroController.html":{}}}],["updateprofile",{"_index":621,"title":{},"body":{"controllers/UserController.html":{},"controllers/UserMicroController.html":{},"injectables/UserService.html":{}}}],["updateprofile(id",{"_index":625,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["updateprofile(payload",{"_index":643,"title":{},"body":{"controllers/UserMicroController.html":{}}}],["updateprofiledto",{"_index":599,"title":{"classes/UpdateProfileDto.html":{}},"body":{"classes/UpdateProfileDto.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["updateprofiledto.address",{"_index":669,"title":{},"body":{"injectables/UserService.html":{}}}],["updateprofiledto.first_name",{"_index":667,"title":{},"body":{"injectables/UserService.html":{}}}],["updateprofiledto.last_name",{"_index":668,"title":{},"body":{"injectables/UserService.html":{}}}],["updateprofiledto.phone_number",{"_index":670,"title":{},"body":{"injectables/UserService.html":{}}}],["useclass",{"_index":67,"title":{},"body":{"modules/AppModule.html":{}}}],["used",{"_index":242,"title":{},"body":{"injectables/AuthService.html":{}}}],["usefactory",{"_index":49,"title":{},"body":{"modules/AppModule.html":{}}}],["useinterceptors",{"_index":494,"title":{},"body":{"controllers/ProductMicroController.html":{}}}],["useinterceptors(cacheinterceptor",{"_index":496,"title":{},"body":{"controllers/ProductMicroController.html":{}}}],["user",{"_index":133,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/OrdersService.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{}}}],["user.authpass",{"_index":141,"title":{},"body":{"controllers/AuthController.html":{}}}],["user.controller",{"_index":654,"title":{},"body":{"modules/UserModule.html":{}}}],["user.email",{"_index":137,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["user.id",{"_index":270,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.orders",{"_index":393,"title":{},"body":{"injectables/OrdersService.html":{}}}],["user.orders.push(order",{"_index":403,"title":{},"body":{"injectables/OrdersService.html":{}}}],["user.result.id",{"_index":325,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["user.result.username",{"_index":326,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["user.service",{"_index":631,"title":{},"body":{"controllers/UserController.html":{},"controllers/UserMicroController.html":{},"modules/UserModule.html":{}}}],["user.username",{"_index":135,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["user/user.module",{"_index":42,"title":{},"body":{"modules/AppModule.html":{}}}],["user_token",{"_index":284,"title":{},"body":{"injectables/AuthService.html":{}}}],["usercontroller",{"_index":618,"title":{"controllers/UserController.html":{}},"body":{"controllers/UserController.html":{},"modules/UserModule.html":{},"coverage.html":{}}}],["usermicrocontroller",{"_index":638,"title":{"controllers/UserMicroController.html":{}},"body":{"controllers/UserMicroController.html":{},"modules/UserModule.html":{},"coverage.html":{}}}],["usermodule",{"_index":10,"title":{"modules/UserModule.html":{}},"body":{"modules/AppModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["username",{"_index":56,"title":{},"body":{"modules/AppModule.html":{},"entities/AuthEntity.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"classes/RegisterDto.html":{}}}],["username,email",{"_index":254,"title":{},"body":{"injectables/AuthService.html":{}}}],["users",{"_index":245,"title":{},"body":{"injectables/AuthService.html":{}}}],["userservice",{"_index":630,"title":{"injectables/UserService.html":{}},"body":{"controllers/UserController.html":{},"controllers/UserMicroController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"overview.html":{}}}],["validate",{"_index":282,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["validate(payload",{"_index":309,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["validator",{"_index":303,"title":{},"body":{"classes/CreateDto.html":{},"classes/LoginDto.html":{},"classes/RegisterDto.html":{},"classes/UpdateDto.html":{},"classes/UpdateProfileDto.html":{},"dependencies.html":{}}}],["value",{"_index":784,"title":{},"body":{"miscellaneous/variables.html":{}}}],["variable",{"_index":688,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":783,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":775,"title":{},"body":{"properties.html":{}}}],["watch",{"_index":751,"title":{},"body":{"index.html":{}}}],["went",{"_index":555,"title":{},"body":{"injectables/ProductService.html":{}}}],["wrong",{"_index":556,"title":{},"body":{"injectables/ProductService.html":{}}}],["z",{"_index":570,"title":{},"body":{"classes/RegisterDto.html":{}}}],["za",{"_index":579,"title":{},"body":{"classes/RegisterDto.html":{}}}],["zoom",{"_index":11,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/OrdersModule.html":{},"modules/ProductModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nOrdersModule\n\nOrdersModule\n\nAppModule -->\n\nOrdersModule->AppModule\n\n\n\n\n\nProductModule\n\nProductModule\n\nAppModule -->\n\nProductModule->AppModule\n\n\n\n\n\nUserModule\n\nUserModule\n\nAppModule -->\n\nUserModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                        \n                            OrdersModule\n                        \n                        \n                            ProductModule\n                        \n                        \n                            UserModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CacheInterceptor, CacheModule, Module } from '@nestjs/common'\nimport { ConfigModule, ConfigService } from '@nestjs/config'\nimport { APP_INTERCEPTOR } from '@nestjs/core'\nimport { MongooseModule } from '@nestjs/mongoose'\nimport { TypeOrmModule } from '@nestjs/typeorm'\nimport { AuthModule } from './auth/auth.module'\nimport { AuthPass } from './entities/auth-pass.entity'\nimport { AuthEntity } from './entities/auth.entity'\nimport { OrdersEntity } from './entities/orders.entity'\nimport { OrdersModule } from './orders/orders.module'\nimport { ProductModule } from './product/product.module'\nimport { UserModule } from './user/user.module'\n\n@Module({\n  imports: [\n    ConfigModule.forRoot({ isGlobal: true }),\n    CacheModule.register({ isGlobal: true }),\n    MongooseModule.forRoot(process.env.DB_MONGO),\n    TypeOrmModule.forRootAsync({\n      imports: [ConfigModule],\n      useFactory: (configService: ConfigService) => ({\n        type: 'postgres',\n        host: configService.get('DB_HOST'),\n        port: +configService.get('DB_PORT'),\n        username: configService.get('DB_USERNAME'),\n        password: configService.get('DB_PASSWORD'),\n        database: configService.get('DB_NAME'),\n        entities: [AuthEntity, AuthPass, OrdersEntity],\n        synchronize: true,\n      }),\n      inject: [ConfigService],\n    }),\n    ProductModule,\n    AuthModule,\n    UserModule,\n    OrdersModule,\n  ],\n  providers: [{ provide: APP_INTERCEPTOR, useClass: CacheInterceptor }],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AuthController.html":{"url":"controllers/AuthController.html","title":"controller - AuthController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AuthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                auth\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getAllUsers\n                            \n                            \n                                getUserByID\n                            \n                            \n                                login\n                            \n                            \n                                Register\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getAllUsers\n                        \n                    \n                \n            \n            \n                \n                    \n                    getAllUsers()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('users')@MessagePattern({name: 'get_all_users'})\n                \n            \n\n            \n                \n                    Defined in src/auth/auth.controller.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getUserByID\n                        \n                    \n                \n            \n            \n                \ngetUserByID(id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@MessagePattern({name: 'find_by_id'})\n                \n            \n\n            \n                \n                    Defined in src/auth/auth.controller.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        login\n                        \n                    \n                \n            \n            \n                \nlogin(login: LoginDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('login')@MessagePattern({name: 'auth_login'})\n                \n            \n\n            \n                \n                    Defined in src/auth/auth.controller.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    login\n                                    \n                                                LoginDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Register\n                        \n                    \n                \n            \n            \n                \nRegister(registerDto: RegisterDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('register')@MessagePattern({name: 'auth_register'})\n                \n            \n\n            \n                \n                    Defined in src/auth/auth.controller.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    registerDto\n                                    \n                                                RegisterDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Observable } from 'rxjs'\nimport { ResponseModel } from 'src/interface/response.model'\nimport { Body, Controller, Get, NotFoundException, Post } from '@nestjs/common'\nimport { MessagePattern } from '@nestjs/microservices'\nimport { ApiTags } from '@nestjs/swagger'\nimport { LoginDto } from '../dtos/login.dto'\nimport { RegisterDto } from '../dtos/register.dto'\nimport { AuthPass } from '../entities/auth-pass.entity'\nimport { AuthEntity } from '../entities/auth.entity'\nimport { AuthService } from './auth.service'\n\n@ApiTags('Auth')\n@Controller('auth')\nexport class AuthController {\n  constructor(private readonly authService: AuthService) {}\n\n  @Post('register')\n  @MessagePattern({ name: 'auth_register' })\n  Register(@Body() registerDto: RegisterDto): Observable {\n    const user = new AuthEntity()\n    user.username = registerDto.username\n    user.email = registerDto.email\n    const authPass = new AuthPass()\n    authPass.password = registerDto.password\n    user.authPass = authPass\n    return this.authService.register(user)\n  }\n\n  @Post('login')\n  @MessagePattern({ name: 'auth_login' })\n  login(@Body() login: LoginDto): Promise {\n    return this.authService.login(login)\n  }\n\n  @Get()\n  @MessagePattern({ name: 'find_by_id' })\n  getUserByID(id: number): Promise {\n    return this.authService.findById(id)\n  }\n\n  @Get('users')\n  @MessagePattern({ name: 'get_all_users' })\n  async getAllUsers(): Promise {\n    return this.authService.getAllUsers()\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/AuthEntity.html":{"url":"entities/AuthEntity.html","title":"entity - AuthEntity","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  AuthEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/entities/auth.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                address\n                            \n                            \n                                authPass\n                            \n                            \n                                created_time\n                            \n                            \n                                email\n                            \n                            \n                                first_name\n                            \n                            \n                                id\n                            \n                            \n                                last_name\n                            \n                            \n                                orders\n                            \n                            \n                                phone_number\n                            \n                            \n                                profile_image\n                            \n                            \n                                updated_time\n                            \n                            \n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        address\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/entities/auth.entity.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        authPass\n                        \n                    \n                \n            \n                \n                    \n                        Type :         AuthPass\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToOne(undefined, authPass => authPass.id, {eager: true, cascade: true})@JoinColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/entities/auth.entity.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        created_time\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @CreateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/entities/auth.entity.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({unique: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/entities/auth.entity.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        first_name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/entities/auth.entity.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/entities/auth.entity.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        last_name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/entities/auth.entity.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        orders\n                        \n                    \n                \n            \n                \n                    \n                        Type :         OrdersEntity[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, order => order.auth, {eager: true, cascade: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/entities/auth.entity.ts:51\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        phone_number\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/entities/auth.entity.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        profile_image\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/entities/auth.entity.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updated_time\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @UpdateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/entities/auth.entity.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/entities/auth.entity.ts:14\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import {\n    Column, CreateDateColumn, Entity, JoinColumn, OneToMany, OneToOne, PrimaryGeneratedColumn,\n    UpdateDateColumn\n} from 'typeorm'\nimport { AuthPass } from './auth-pass.entity'\nimport { OrdersEntity } from './orders.entity'\n\n@Entity()\nexport class AuthEntity {\n  @PrimaryGeneratedColumn()\n  id: number\n\n  @Column()\n  username: string\n\n  @Column({ unique: true })\n  email: string\n\n  @Column({ nullable: true })\n  first_name: string\n\n  @Column({ nullable: true })\n  last_name: string\n\n  @Column({ nullable: true })\n  phone_number: string\n\n  @Column({ nullable: true })\n  address: string\n\n  @Column({ nullable: true })\n  profile_image: string\n\n  @CreateDateColumn()\n  created_time: Date\n\n  @UpdateDateColumn()\n  updated_time: Date\n\n  @OneToOne(() => AuthPass, (authPass) => authPass.id, {\n    eager: true,\n    cascade: true,\n  })\n  @JoinColumn()\n  authPass: AuthPass\n\n  @OneToMany(() => OrdersEntity, (order) => order.auth, {\n    eager: true,\n    cascade: true,\n  })\n  orders: OrdersEntity[]\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_providers\n\n\n\n\nAuthService\n\nAuthService\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/auth/auth.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AuthService\n                        \n                        \n                            JwtStrategy\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AuthController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { config } from 'dotenv'\nimport { AuthPass } from 'src/entities/auth-pass.entity'\nimport { AuthEntity } from 'src/entities/auth.entity'\nimport { Module } from '@nestjs/common'\nimport { JwtModule } from '@nestjs/jwt'\nimport { TypeOrmModule } from '@nestjs/typeorm'\nimport { AuthController } from './auth.controller'\nimport { AuthService } from './auth.service'\nimport { JwtStrategy } from './jwt.strategy'\n\nconfig()\n\n@Module({\n  imports: [\n    TypeOrmModule.forFeature([AuthEntity, AuthPass]),\n    JwtModule.register({ secret: process.env.JWT_SECRET }),\n  ],\n  controllers: [AuthController],\n  providers: [AuthService, JwtStrategy],\n})\nexport class AuthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/AuthPass.html":{"url":"entities/AuthPass.html","title":"entity - AuthPass","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  AuthPass\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/entities/auth-pass.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                created_at\n                            \n                            \n                                id\n                            \n                            \n                                password\n                            \n                            \n                                updated_at\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        created_at\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @CreateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/entities/auth-pass.entity.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/entities/auth-pass.entity.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/entities/auth-pass.entity.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updated_at\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @UpdateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/entities/auth-pass.entity.ts:19\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import * as bcrypt from 'bcrypt'\nimport {\n    BeforeInsert, BeforeUpdate, Column, CreateDateColumn, Entity, PrimaryGeneratedColumn,\n    UpdateDateColumn\n} from 'typeorm'\n\n@Entity()\nexport class AuthPass {\n  @PrimaryGeneratedColumn()\n  id: number\n\n  @Column()\n  password: string\n\n  @CreateDateColumn()\n  created_at: Date\n\n  @UpdateDateColumn()\n  updated_at: Date\n\n  @BeforeInsert()\n  @BeforeUpdate()\n  async hashPassword(password: string) {\n    const salt = await bcrypt.genSalt()\n    this.password = await bcrypt.hash(this.password || password, salt)\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                findById\n                            \n                            \n                                    Async\n                                getAllUsers\n                            \n                            \n                                    Async\n                                login\n                            \n                            \n                                register\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(authRepository: Repository, jwtService: JwtService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/auth.service.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        jwtService\n                                                  \n                                                        \n                                                                    JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findById\n                        \n                    \n                \n            \n            \n                \n                    \n                    findById(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/auth.service.ts:79\n                \n            \n\n\n            \n                \n                    Find user\nused by jwt.strategy\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getAllUsers\n                        \n                    \n                \n            \n            \n                \n                    \n                    getAllUsers()\n                \n            \n\n\n            \n                \n                    Defined in src/auth/auth.service.ts:93\n                \n            \n\n\n            \n                \n                    Gets all users\n\n\n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        array\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        login\n                        \n                    \n                \n            \n            \n                \n                    \n                    login(loginDto: LoginDto)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/auth.service.ts:50\n                \n            \n\n\n            \n                \n                    Login\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    loginDto\n                                    \n                                                LoginDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        requires email and password\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        ResponseModel\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        register\n                        \n                    \n                \n            \n            \n                \nregister(authEntity: AuthEntity)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/auth.service.ts:26\n                \n            \n\n\n            \n                \n                    Resgister\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    authEntity\n                                    \n                                                AuthEntity\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        requires username,email and password\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        ResponseModel\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import * as bcrypt from 'bcrypt'\nimport { catchError, from, map, Observable } from 'rxjs'\nimport { Repository } from 'typeorm'\nimport {\n    ConflictException, Injectable, NotFoundException, UnauthorizedException\n} from '@nestjs/common'\nimport { JwtService } from '@nestjs/jwt'\nimport { InjectRepository } from '@nestjs/typeorm'\nimport { LoginDto } from '../dtos/login.dto'\nimport { AuthEntity } from '../entities/auth.entity'\nimport { ResponseModel } from '../interface/response.model'\n\n@Injectable()\nexport class AuthService {\n  constructor(\n    @InjectRepository(AuthEntity)\n    private readonly authRepository: Repository,\n    private readonly jwtService: JwtService,\n  ) {}\n\n  /**\n   * Resgister\n   * @param authEntity requires username,email and password\n   * @returns ResponseModel\n   */\n  register(authEntity: AuthEntity): Observable {\n    return from(this.authRepository.save(authEntity)).pipe(\n      map((user) => {\n        return {\n          success: true,\n          result: {\n            username: user.username,\n            email: user.email,\n            token: this.jwtService.sign({ id: user.id, expiresIn: '1h' }),\n          },\n          code: 201,\n        }\n      }),\n      catchError((err) => {\n        throw new ConflictException()\n      }),\n    )\n  }\n\n  /**\n   * Login\n   * @param loginDto requires email and password\n   * @returns ResponseModel\n   */\n  async login(loginDto: LoginDto): Promise {\n    const findUser = await this.authRepository.findOne({\n      where: { email: loginDto.email },\n    })\n    if (!findUser) {\n      return new NotFoundException()\n    }\n    const hashedPassword = findUser.authPass.password\n    const validate = await bcrypt.compare(loginDto.password, hashedPassword)\n    if (!validate) {\n      return new UnauthorizedException()\n    }\n    const user_token = await this.jwtService.signAsync({\n      id: findUser.id,\n      expiresIn: '1h',\n    })\n    return {\n      success: true,\n      result: { id: findUser.id, token: user_token },\n      code: 200,\n    }\n  }\n\n  /**\n   * Find user\n   * used by jwt.strategy\n   * @param id\n   * @returns\n   */\n  async findById(id: number): Promise {\n    console.log(id)\n    const foundUser = await this.authRepository.findOne({ where: { id } })\n    return {\n      success: true,\n      result: foundUser,\n      code: 200,\n    }\n  }\n\n  /**\n   * Gets all users\n   * @returns array\n   */\n  async getAllUsers(): Promise {\n    return this.authRepository.find()\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateDto.html":{"url":"classes/CreateDto.html","title":"class - CreateDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/dtos/product.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                image\n                            \n                            \n                                    Optional\n                                likes\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        image\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/dtos/product.dto.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        likes\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/dtos/product.dto.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/dtos/product.dto.ts:8\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsInt, IsString } from 'class-validator'\nimport { ApiProperty } from '@nestjs/swagger'\n\nexport class CreateDto {\n\n  @IsString()\n  @ApiProperty()\n  title: string\n\n  @IsString()\n  @ApiProperty()\n  image: string\n\n  likes?: number\n}\n\nexport class UpdateDto {\n  id?: number\n\n  @IsString()\n  @ApiProperty()\n  title: string\n\n  @IsString()\n  @ApiProperty()\n  image: string\n\n  likes?: number\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtStrategy.html":{"url":"injectables/JwtStrategy.html","title":"injectable - JwtStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  JwtStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/jwt.strategy.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/jwt.strategy.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        validate\n                        \n                    \n                \n            \n            \n                \n                    \n                    validate(payload: any)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/jwt.strategy.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    payload\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { config } from 'dotenv'\nimport { ExtractJwt, Strategy } from 'passport-jwt'\nimport { Injectable, UnauthorizedException } from '@nestjs/common'\nimport { PassportStrategy } from '@nestjs/passport'\nimport { AuthService } from './auth.service'\n\nconfig()\n\n@Injectable()\nexport class JwtStrategy extends PassportStrategy(Strategy) {\n  constructor(private readonly authService: AuthService) {\n    super({\n      jwtFromRequest: ExtractJwt.fromAuthHeaderAsBearerToken(),\n      secretOrKey: process.env.JWT_SECRET,\n    })\n  }\n  async validate(payload: any): Promise {\n    const user = await this.authService.findById(payload.id)\n    if (!user) {\n      throw new UnauthorizedException()\n    }\n    return { user: user.result.id, username: user.result.username }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoginDto.html":{"url":"classes/LoginDto.html","title":"class - LoginDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoginDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/dtos/login.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                email\n                            \n                            \n                                password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsEmail()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/dtos/login.dto.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsString()@MaxLength(20)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/dtos/login.dto.ts:12\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsEmail, IsString, MaxLength } from 'class-validator'\nimport { ApiProperty } from '@nestjs/swagger'\n\nexport class LoginDto {\n  @ApiProperty()\n  @IsEmail()\n  email: string\n\n  @ApiProperty()\n  @IsString()\n  @MaxLength(20)\n  password: string\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/OrderDto.html":{"url":"classes/OrderDto.html","title":"class - OrderDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  OrderDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/dtos/order.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                price\n                            \n                            \n                                product_id\n                            \n                            \n                                product_name\n                            \n                            \n                                quantity\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        price\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/dtos/order.dto.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        product_id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/dtos/order.dto.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        product_name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/dtos/order.dto.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        quantity\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/dtos/order.dto.ts:11\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger'\n\nexport class OrderDto {\n  @ApiProperty()\n  product_id: number\n\n  @ApiProperty()\n  product_name: string\n\n  @ApiProperty()\n  quantity: number\n\n  @ApiProperty()\n  price: number\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/OrdersController.html":{"url":"controllers/OrdersController.html","title":"controller - OrdersController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  OrdersController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/orders/orders.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                orders\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getOrder\n                            \n                            \n                                order\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getOrder\n                        \n                    \n                \n            \n            \n                \ngetOrder()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/orders/orders.controller.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        order\n                        \n                    \n                \n            \n            \n                \norder(orderDto: OrderDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n            \n                \n                    Defined in src/orders/orders.controller.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    orderDto\n                                    \n                                                OrderDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { OrderDto } from 'src/dtos/order.dto'\nimport { Body, Controller, Get, Post } from '@nestjs/common'\nimport { ApiTags } from '@nestjs/swagger'\nimport { OrdersService } from './orders.service'\n\n@ApiTags('Orders')\n@Controller('orders')\nexport class OrdersController {\n  constructor(private readonly ordersService: OrdersService) {}\n\n  @Get()\n  getOrder() {\n    return this.ordersService.getOrder()\n  }\n\n  @Post()\n  order(@Body() orderDto: OrderDto) {\n    return this.ordersService.order(orderDto)\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/OrdersEntity.html":{"url":"entities/OrdersEntity.html","title":"entity - OrdersEntity","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  OrdersEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/entities/orders.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                auth\n                            \n                            \n                                created_at\n                            \n                            \n                                id\n                            \n                            \n                                paid\n                            \n                            \n                                price\n                            \n                            \n                                product_id\n                            \n                            \n                                product_name\n                            \n                            \n                                quantity\n                            \n                            \n                                updated_at\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        auth\n                        \n                    \n                \n            \n                \n                    \n                        Type :         AuthEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, auth => auth.orders, {onDelete: 'CASCADE'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/entities/orders.entity.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        created_at\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @CreateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/entities/orders.entity.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/entities/orders.entity.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        paid\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({default: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/entities/orders.entity.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        price\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'decimal'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/entities/orders.entity.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        product_id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/entities/orders.entity.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        product_name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/entities/orders.entity.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        quantity\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/entities/orders.entity.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updated_at\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @UpdateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/entities/orders.entity.ts:30\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import {\n    Column, CreateDateColumn, Entity, ManyToOne, PrimaryGeneratedColumn, UpdateDateColumn\n} from 'typeorm'\nimport { AuthEntity } from './auth.entity'\n\n@Entity()\nexport class OrdersEntity {\n  @PrimaryGeneratedColumn()\n  id: number\n\n  @Column()\n  product_id: number\n\n  @Column()\n  product_name: string\n\n  @Column()\n  quantity: number\n\n  @Column({ type: 'decimal' })\n  price: number\n\n  @Column({ default: false })\n  paid: boolean\n\n  @CreateDateColumn()\n  created_at: Date\n\n  @UpdateDateColumn()\n  updated_at: Date\n\n  @ManyToOne(() => AuthEntity, (auth) => auth.orders, {\n    onDelete: 'CASCADE',\n  })\n  auth: AuthEntity\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/OrdersModule.html":{"url":"modules/OrdersModule.html","title":"module - OrdersModule","body":"\n                   \n\n\n\n\n    Modules\n    OrdersModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_OrdersModule\n\n\n\ncluster_OrdersModule_providers\n\n\n\n\nOrdersService\n\nOrdersService\n\n\n\nOrdersModule\n\nOrdersModule\n\nOrdersModule -->\n\nOrdersService->OrdersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/orders/orders.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            OrdersService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            OrdersController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { AuthEntity } from 'src/entities/auth.entity'\nimport { Module } from '@nestjs/common'\nimport { TypeOrmModule } from '@nestjs/typeorm'\nimport { OrdersController } from './orders.controller'\nimport { OrdersService } from './orders.service'\n\n@Module({\n  imports: [TypeOrmModule.forFeature([AuthEntity])],\n  controllers: [OrdersController],\n  providers: [OrdersService],\n})\nexport class OrdersModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/OrdersService.html":{"url":"injectables/OrdersService.html","title":"injectable - OrdersService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  OrdersService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/orders/orders.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getOrder\n                            \n                            \n                                    Async\n                                order\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(authRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/orders/orders.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getOrder\n                        \n                    \n                \n            \n            \n                \n                    \n                    getOrder()\n                \n            \n\n\n            \n                \n                    Defined in src/orders/orders.service.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     unknown\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        order\n                        \n                    \n                \n            \n            \n                \n                    \n                    order(orderDto: OrderDto)\n                \n            \n\n\n            \n                \n                    Defined in src/orders/orders.service.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    orderDto\n                                    \n                                                OrderDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { OrderDto } from 'src/dtos/order.dto'\nimport { AuthEntity } from 'src/entities/auth.entity'\nimport { OrdersEntity } from 'src/entities/orders.entity'\nimport { Repository } from 'typeorm'\nimport { Injectable } from '@nestjs/common'\nimport { InjectRepository } from '@nestjs/typeorm'\n\n@Injectable()\nexport class OrdersService {\n  constructor(\n    @InjectRepository(AuthEntity)\n    private readonly authRepository: Repository,\n  ) {}\n\n  // TODO jwt user id\n  async getOrder() {\n    const user = await this.authRepository.findOne({ where: { id: 1 } })\n    return user.orders\n  }\n\n  async order(orderDto: OrderDto) {\n    const user = await this.authRepository.findOneBy({ id: 1 })\n    const order = new OrdersEntity()\n    order.product_id = orderDto.product_id\n    order.product_name = orderDto.product_name\n    order.price = orderDto.price\n    order.quantity = orderDto.quantity\n    user.orders.push(order)\n    const result = await this.authRepository.save(user)\n    return result\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Product.html":{"url":"classes/Product.html","title":"class - Product","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Product\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/schemas/product.model.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                id\n                            \n                            \n                                    Optional\n                                image\n                            \n                            \n                                    Optional\n                                likes\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true, unique: true, type: Number})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/schemas/product.model.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        image\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({default: 'placeholder'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/schemas/product.model.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        likes\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/schemas/product.model.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true, unique: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/schemas/product.model.ts:11\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose'\n\nexport type ProductDocument = Product & Document\n\n@Schema()\nexport class Product {\n  @Prop({ required: true, unique: true, type: Number })\n  id: Number\n\n  @Prop({ required: true, unique: true })\n  title: string\n\n  @Prop({ default: 'placeholder' })\n  image?: string\n\n  @Prop()\n  likes?: number\n}\nexport const ProductSchema = SchemaFactory.createForClass(Product)\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/ProductController.html":{"url":"controllers/ProductController.html","title":"controller - ProductController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  ProductController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/product/product.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                products\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                addProduct\n                            \n                            \n                                    Async\n                                getAll\n                            \n                            \n                                getOne\n                            \n                            \n                                    Async\n                                productDeleted\n                            \n                            \n                                    Async\n                                productUpdated\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        addProduct\n                        \n                    \n                \n            \n            \n                \n                    \n                    addProduct(product: CreateDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n            \n                \n                    Defined in src/product/product.controller.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    product\n                                    \n                                                CreateDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    getAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/product/product.controller.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     unknown\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getOne\n                        \n                    \n                \n            \n            \n                \ngetOne(id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')\n                \n            \n\n            \n                \n                    Defined in src/product/product.controller.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        productDeleted\n                        \n                    \n                \n            \n            \n                \n                    \n                    productDeleted(id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')\n                \n            \n\n            \n                \n                    Defined in src/product/product.controller.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        productUpdated\n                        \n                    \n                \n            \n            \n                \n                    \n                    productUpdated(id: number, product: UpdateDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Put(':id')\n                \n            \n\n            \n                \n                    Defined in src/product/product.controller.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    product\n                                    \n                                                UpdateDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Delete, Get, Param, Post, Put } from '@nestjs/common'\nimport { ApiTags } from '@nestjs/swagger'\nimport { CreateDto, UpdateDto } from '../dtos/product.dto'\nimport { Product } from '../schemas/product.model'\nimport { ProductService } from './product.service'\n\n@ApiTags('Products')\n@Controller('products')\nexport class ProductController {\n  constructor(private productService: ProductService) {}\n\n  @Get()\n  async getAll() {\n    return this.productService.getAll()\n  }\n\n  @Get(':id')\n  getOne(@Param('id') id: number) {\n    return this.productService.getOne(id)\n  }\n\n  @Post()\n  async addProduct(@Body() product: CreateDto) {\n    const createDto = new Product()\n    createDto.title = product.title\n    createDto.image = product.image\n    createDto.likes = product.likes\n    const result = await this.productService.addProduct(createDto)\n    return result\n  }\n\n  @Put(':id')\n  async productUpdated(@Param('id') id: number, @Body() product: UpdateDto) {\n    return this.productService.update(id || product.id, product)\n  }\n\n  @Delete(':id')\n  async productDeleted(@Param('id') id: number) {\n    const result = await this.productService.delete(id)\n    return result\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/ProductMicroController.html":{"url":"controllers/ProductMicroController.html","title":"controller - ProductMicroController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  ProductMicroController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/product/product-microservice.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                microservice/product\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                addProduct\n                            \n                            \n                                getAll\n                            \n                            \n                                getOneProduct\n                            \n                            \n                                    Async\n                                productDeleteRedis\n                            \n                            \n                                    Async\n                                productUpdatedRedis\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        addProduct\n                        \n                    \n                \n            \n            \n                \n                    \n                    addProduct(product: CreateDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@MessagePattern({name: 'product_created'})\n                \n            \n\n            \n                \n                    Defined in src/product/product-microservice.controller.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    product\n                                    \n                                                CreateDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAll\n                        \n                    \n                \n            \n            \n                \ngetAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @CacheKey('cache_getAll')@Get()@MessagePattern({name: 'all_product'})\n                \n            \n\n            \n                \n                    Defined in src/product/product-microservice.controller.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getOneProduct\n                        \n                    \n                \n            \n            \n                \ngetOneProduct(id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')@MessagePattern({name: 'get_product'})\n                \n            \n\n            \n                \n                    Defined in src/product/product-microservice.controller.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        productDeleteRedis\n                        \n                    \n                \n            \n            \n                \n                    \n                    productDeleteRedis(id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete()@MessagePattern({name: 'product_deleted'})\n                \n            \n\n            \n                \n                    Defined in src/product/product-microservice.controller.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        productUpdatedRedis\n                        \n                    \n                \n            \n            \n                \n                    \n                    productUpdatedRedis(payload: object)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Put()@MessagePattern({name: 'product_updated'})\n                \n            \n\n            \n                \n                    Defined in src/product/product-microservice.controller.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    payload\n                                    \n                                                object\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Product } from 'src/schemas/product.model'\nimport {\n    Body, CacheInterceptor, CacheKey, Controller, Delete, Get, Post, Put, UseInterceptors\n} from '@nestjs/common'\nimport { MessagePattern } from '@nestjs/microservices'\nimport { CreateDto, UpdateDto } from '../dtos/product.dto'\nimport { ProductService } from './product.service'\n\n@Controller('microservice/product')\n@UseInterceptors(CacheInterceptor)\nexport class ProductMicroController {\n  constructor(private productService: ProductService) {}\n\n  @CacheKey('cache_getAll')\n  @Get()\n  @MessagePattern({ name: 'all_product' })\n  getAll() {\n    return this.productService.getAll()\n  }\n\n  @Get(':id')\n  @MessagePattern({ name: 'get_product' })\n  getOneProduct(id: number) {\n    return this.productService.getOne(id)\n  }\n\n  @Post()\n  @MessagePattern({ name: 'product_created' })\n  async addProduct(@Body() product: CreateDto) {\n    const createDto = new Product()\n    createDto.title = product.title\n    createDto.image = product.image\n    createDto.likes = product.likes\n    const result = await this.productService.addProduct(createDto)\n    return result\n  }\n\n  @Put()\n  @MessagePattern({ name: 'product_updated' })\n  async productUpdatedRedis(payload: object) {\n    const updateDto = new UpdateDto()\n    updateDto.image = payload['image']\n    updateDto.title = payload['title']\n    return this.productService.update(payload['id'], updateDto)\n  }\n\n  @Delete()\n  @MessagePattern({ name: 'product_deleted' })\n  async productDeleteRedis(id: number) {\n    const result = await this.productService.delete(id)\n    return result\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ProductModule.html":{"url":"modules/ProductModule.html","title":"module - ProductModule","body":"\n                   \n\n\n\n\n    Modules\n    ProductModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_ProductModule\n\n\n\ncluster_ProductModule_providers\n\n\n\n\nProductService\n\nProductService\n\n\n\nProductModule\n\nProductModule\n\nProductModule -->\n\nProductService->ProductModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/product/product.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ProductService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            ProductMicroController\n                        \n                        \n                            ProductController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common'\nimport { MongooseModule } from '@nestjs/mongoose'\nimport { Product, ProductSchema } from '../schemas/product.model'\nimport { ProductMicroController } from './product-microservice.controller'\nimport { ProductController } from './product.controller'\nimport { ProductService } from './product.service'\n\n@Module({\n  imports: [\n    MongooseModule.forFeature([{ name: Product.name, schema: ProductSchema }]),\n  ],\n  controllers: [ProductMicroController, ProductController],\n  providers: [ProductService],\n})\nexport class ProductModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ProductService.html":{"url":"injectables/ProductService.html","title":"injectable - ProductService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ProductService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/product/product.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                addProduct\n                            \n                            \n                                    Async\n                                delete\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                getAll\n                            \n                            \n                                    Async\n                                getOne\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(cacheManager: Cache, productModel: Model)\n                    \n                \n                        \n                            \n                                Defined in src/product/product.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        cacheManager\n                                                  \n                                                        \n                                                                    Cache\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        productModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        addProduct\n                        \n                    \n                \n            \n            \n                \n                    \n                    addProduct(product: Product)\n                \n            \n\n\n            \n                \n                    Defined in src/product/product.service.ts:51\n                \n            \n\n\n            \n                \n                    Save a product\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    product\n                                    \n                                                Product\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        product\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        delete\n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/product/product.service.ts:96\n                \n            \n\n\n            \n                \n                    Delete a product\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/product/product.service.ts:68\n                \n            \n\n\n            \n                \n                    Find a PRODUCT\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        product\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    getAll()\n                \n            \n\n\n            \n                \n                    Defined in src/product/product.service.ts:20\n                \n            \n\n\n            \n                \n                    Get all Products\n\n\n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        product\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    getOne(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/product/product.service.ts:36\n                \n            \n\n\n            \n                \n                    Gets product by id\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(id: number, product: UpdateDto)\n                \n            \n\n\n            \n                \n                    Defined in src/product/product.service.ts:78\n                \n            \n\n\n            \n                \n                    Update a product\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    product\n                                    \n                                                UpdateDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Cache } from 'cache-manager'\nimport { Model } from 'mongoose'\nimport { HttpException, HttpStatus, Inject, Injectable } from '@nestjs/common'\nimport { InjectModel } from '@nestjs/mongoose'\nimport { UpdateDto } from '../dtos/product.dto'\nimport { Product, ProductDocument } from '../schemas/product.model'\n\n@Injectable()\nexport class ProductService {\n  constructor(\n    @Inject('CACHE_MANAGER') private readonly cacheManager: Cache,\n    @InjectModel(Product.name)\n    private readonly productModel: Model,\n  ) {}\n\n  /**\n   * Get all Products\n   * @returns product\n   */\n  async getAll(): Promise {\n    // this.cacheManager.set('cache_getAll', 32)\n    const cachedItem = await this.cacheManager.get('cache-getAll')\n    if (cachedItem == undefined) {\n      const result = await this.productModel.find().exec()\n      await this.cacheManager.set('cache-getAll', result, 50)\n      return result\n    }\n    return cachedItem\n  }\n\n  /**\n   * Gets product by id\n   * @param id\n   * @returns\n   */\n  async getOne(id: number): Promise {\n    const cachedItem = await this.cacheManager.get('cache-getAll')\n    if (cachedItem == undefined) {\n      const result = await this.productModel.findOne({ id })\n      await this.cacheManager.set('cache-getAll', result, 50)\n      return result\n    }\n    return cachedItem\n  }\n\n  /**\n   * Save a product\n   * @param product\n   * @returns product\n   */\n  async addProduct(product: Product): Promise {\n    return new Promise(async (resolve, reject) => {\n      try {\n        const result = await new this.productModel(product).save()\n        resolve(result)\n      } catch (err) {\n        reject(new HttpException('Something went wrong!', HttpStatus.CONFLICT)),\n          console.log(err.message)\n      }\n    })\n  }\n\n  /**\n   * Find a PRODUCT\n   * @param id\n   * @returns product\n   */\n  async findOne(id: number): Promise {\n    return this.productModel.findOne({ id })\n  }\n\n  /**\n   * Update a product\n   * @param id\n   * @param product\n   * @returns\n   */\n  async update(id: number, product: UpdateDto): Promise {\n    return new Promise(async (resolve, reject) => {\n      try {\n        await this.productModel.findOneAndUpdate({ id: id }, product)\n        const updatedProduct = await this.productModel.findOne({ id })\n        resolve(updatedProduct)\n      } catch (error) {\n        console.log(error.message)\n        reject(new HttpException('Something went wrong!', HttpStatus.CONFLICT))\n      }\n    })\n  }\n\n  /**\n   * Delete a product\n   * @param id\n   * @returns\n   */\n  async delete(id: number) {\n    return new Promise(async (resolve, reject) => {\n      try {\n        const findProduct = await this.productModel.findOne({ id })\n        if (findProduct == null) {\n          reject(\n            new HttpException('Something went wrong!', HttpStatus.CONFLICT),\n          )\n        }\n        const result = await this.productModel.deleteOne({ id })\n        resolve(result)\n      } catch (error) {\n        console.log(error.message)\n        reject(new HttpException('Something went wrong!', HttpStatus.CONFLICT))\n      }\n    })\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RegisterDto.html":{"url":"classes/RegisterDto.html","title":"class - RegisterDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RegisterDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/dtos/register.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                email\n                            \n                            \n                                password\n                            \n                            \n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsEmail()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/dtos/register.dto.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsString()@MinLength(4)@MaxLength(20)@Matches(/(?=.*[A-Z])/, {message: 'password must contain atleast one capital letter'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/dtos/register.dto.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsString()@MinLength(4)@MaxLength(20)@Matches(/^[a-zA-Z\\-]+$/, {message: 'username should Not have any digits'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/dtos/register.dto.ts:10\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsEmail, IsString, Matches, MaxLength, MinLength } from 'class-validator'\nimport { ApiProperty } from '@nestjs/swagger'\n\nexport class RegisterDto {\n  @ApiProperty()\n  @IsString()\n  @MinLength(4)\n  @MaxLength(20)\n  @Matches(/^[a-zA-Z\\-]+$/, { message: 'username should Not have any digits' })\n  username: string\n\n  @ApiProperty()\n  @IsString()\n  @MinLength(4)\n  @MaxLength(20)\n  @Matches(/(?=.*[A-Z])/, {\n    message: 'password must contain atleast one capital letter',\n  })\n  password: string\n\n  @ApiProperty()\n  @IsEmail()\n  email: string\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ResponseModel.html":{"url":"classes/ResponseModel.html","title":"class - ResponseModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ResponseModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/interface/response.model.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                code\n                            \n                            \n                                result\n                            \n                            \n                                success\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(success: boolean, result: any, code: number)\n                    \n                \n                        \n                            \n                                Defined in src/interface/response.model.ts:4\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        success\n                                                  \n                                                        \n                                                                        boolean\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        result\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        code\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        code\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/interface/response.model.ts:4\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        result\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/interface/response.model.ts:3\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        success\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in src/interface/response.model.ts:2\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class ResponseModel {\n  success: boolean\n  result: any\n  code: number\n  constructor(success: boolean, result: any, code: number) {\n    this.success = success\n    this.result = result\n    this.code = code\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateDto.html":{"url":"classes/UpdateDto.html","title":"class - UpdateDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/dtos/product.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                id\n                            \n                            \n                                image\n                            \n                            \n                                    Optional\n                                likes\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/dtos/product.dto.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        image\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/dtos/product.dto.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        likes\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/dtos/product.dto.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/dtos/product.dto.ts:22\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsInt, IsString } from 'class-validator'\nimport { ApiProperty } from '@nestjs/swagger'\n\nexport class CreateDto {\n\n  @IsString()\n  @ApiProperty()\n  title: string\n\n  @IsString()\n  @ApiProperty()\n  image: string\n\n  likes?: number\n}\n\nexport class UpdateDto {\n  id?: number\n\n  @IsString()\n  @ApiProperty()\n  title: string\n\n  @IsString()\n  @ApiProperty()\n  image: string\n\n  likes?: number\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateProfileDto.html":{"url":"classes/UpdateProfileDto.html","title":"class - UpdateProfileDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateProfileDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/dtos/update-profile.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                address\n                            \n                            \n                                    Optional\n                                first_name\n                            \n                            \n                                    Optional\n                                last_name\n                            \n                            \n                                    Optional\n                                phone_number\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        address\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/dtos/update-profile.dto.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        first_name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/dtos/update-profile.dto.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        last_name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/dtos/update-profile.dto.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        phone_number\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@Matches(/09(1[0-9]|3[1-9]|2[1-9])-?[0-9]{3}-?[0-9]{4}/, {message: 'should be 11 characters and start with 09'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/dtos/update-profile.dto.ts:15\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Matches } from 'class-validator'\nimport { ApiProperty } from '@nestjs/swagger'\n\nexport class UpdateProfileDto {\n  @ApiProperty()\n  first_name?: string\n\n  @ApiProperty()\n  last_name?: string\n\n  @ApiProperty()\n  @Matches(/09(1[0-9]|3[1-9]|2[1-9])-?[0-9]{3}-?[0-9]{4}/, {\n    message: 'should be 11 characters and start with 09',\n  })\n  phone_number?: string\n\n  @ApiProperty()\n  address?: string\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/UserController.html":{"url":"controllers/UserController.html","title":"controller - UserController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  UserController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/user.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                user\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getUserProfile\n                            \n                            \n                                    Async\n                                updateProfile\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getUserProfile\n                        \n                    \n                \n            \n            \n                \n                    \n                    getUserProfile(id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('profile:id')\n                \n            \n\n            \n                \n                    Defined in src/user/user.controller.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        updateProfile\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateProfile(id: number, updateProfileDto: UpdateProfileDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Put('profile:id')\n                \n            \n\n            \n                \n                    Defined in src/user/user.controller.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateProfileDto\n                                    \n                                                UpdateProfileDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Get, Param, Put } from '@nestjs/common'\nimport { ApiTags } from '@nestjs/swagger'\nimport { UpdateProfileDto } from '../dtos/update-profile.dto'\nimport { ResponseModel } from '../interface/response.model'\nimport { UserService } from './user.service'\n\n@ApiTags('User')\n@Controller('user')\nexport class UserController {\n  constructor(private readonly userService: UserService) {}\n\n  @Get('profile:id')\n  async getUserProfile(@Param('id') id: number): Promise {\n    return this.userService.getUserProfile(id)\n  }\n\n  @Put('profile:id')\n  async updateProfile(\n    @Param('id') id: number,\n    @Body() updateProfileDto: UpdateProfileDto,\n  ): Promise {\n    return this.userService.updateProfile(id, updateProfileDto)\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/UserMicroController.html":{"url":"controllers/UserMicroController.html","title":"controller - UserMicroController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  UserMicroController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/user-microservice.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                microservice/user\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getUserProfile\n                            \n                            \n                                    Async\n                                updateProfile\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getUserProfile\n                        \n                    \n                \n            \n            \n                \n                    \n                    getUserProfile(id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@MessagePattern({name: 'get_user_profile'})\n                \n            \n\n            \n                \n                    Defined in src/user/user-microservice.controller.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        updateProfile\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateProfile(payload: any)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Put('update')@MessagePattern({name: 'update_user_profile'})\n                \n            \n\n            \n                \n                    Defined in src/user/user-microservice.controller.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    payload\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { ResponseModel } from 'src/interface/response.model'\nimport { Controller, Get, Put } from '@nestjs/common'\nimport { MessagePattern } from '@nestjs/microservices'\nimport { ApiTags } from '@nestjs/swagger'\nimport { UserService } from './user.service'\n\n@ApiTags('User')\n@Controller('microservice/user')\nexport class UserMicroController {\n  constructor(private readonly userService: UserService) {}\n\n  @Get()\n  @MessagePattern({ name: 'get_user_profile' })\n  async getUserProfile(id: number): Promise {\n    return this.userService.getUserProfile(id)\n  }\n\n  @Put('update')\n  @MessagePattern({ name: 'update_user_profile' })\n  async updateProfile(payload: any): Promise {\n    return this.userService.updateProfile(payload.id, payload.updateProfileDto)\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UserModule.html":{"url":"modules/UserModule.html","title":"module - UserModule","body":"\n                   \n\n\n\n\n    Modules\n    UserModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_UserModule\n\n\n\ncluster_UserModule_providers\n\n\n\n\nUserService\n\nUserService\n\n\n\nUserModule\n\nUserModule\n\nUserModule -->\n\nUserService->UserModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/user/user.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            UserService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            UserController\n                        \n                        \n                            UserMicroController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { AuthPass } from 'src/entities/auth-pass.entity'\nimport { AuthEntity } from 'src/entities/auth.entity'\nimport { Module } from '@nestjs/common'\nimport { TypeOrmModule } from '@nestjs/typeorm'\nimport { UserMicroController } from './user-microservice.controller'\nimport { UserController } from './user.controller'\nimport { UserService } from './user.service'\n\n@Module({\n  imports: [TypeOrmModule.forFeature([AuthEntity, AuthPass])],\n  controllers: [UserController, UserMicroController],\n  providers: [UserService],\n})\nexport class UserModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserService.html":{"url":"injectables/UserService.html","title":"injectable - UserService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UserService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/user.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getUserProfile\n                            \n                            \n                                    Async\n                                updateProfile\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(authRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/user/user.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getUserProfile\n                        \n                    \n                \n            \n            \n                \n                    \n                    getUserProfile(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/user/user.service.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        updateProfile\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateProfile(id: number, updateProfileDto: UpdateProfileDto)\n                \n            \n\n\n            \n                \n                    Defined in src/user/user.service.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateProfileDto\n                                    \n                                                UpdateProfileDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Repository } from 'typeorm'\nimport { Injectable } from '@nestjs/common'\nimport { InjectRepository } from '@nestjs/typeorm'\nimport { UpdateProfileDto } from '../dtos/update-profile.dto'\nimport { AuthEntity } from '../entities/auth.entity'\nimport { ResponseModel } from '../interface/response.model'\n\n@Injectable()\nexport class UserService {\n  constructor(\n    @InjectRepository(AuthEntity)\n    private readonly authRepository: Repository,\n  ) {}\n\n  async getUserProfile(id: number): Promise {\n    const findUser = await this.authRepository.findOne({ where: { id: id } })\n    if (!findUser) {\n      return {\n        success: true,\n        result: 'Not found!',\n        code: 404,\n      }\n    }\n    const profile = {\n      id: findUser.id,\n      first_name: findUser.first_name,\n      last_name: findUser.last_name,\n      phone_number: findUser.phone_number,\n      address: findUser.address,\n      profile_image: findUser.profile_image,\n    }\n    return {\n      success: true,\n      result: profile,\n      code: 200,\n    }\n  }\n\n  async updateProfile(\n    id: number,\n    updateProfileDto: UpdateProfileDto,\n  ): Promise {\n    const finduser = await this.authRepository.findOne({ where: { id: id } })\n    if (!finduser) {\n      return {\n        success: true,\n        result: 'Not found!',\n        code: 404,\n      }\n    }\n    finduser.first_name = updateProfileDto.first_name\n    finduser.last_name = updateProfileDto.last_name\n    finduser.address = updateProfileDto.address\n    finduser.phone_number = updateProfileDto.phone_number\n    const updateProfile = await this.authRepository.save(finduser)\n    return {\n      success: true,\n      result: updateProfile,\n      code: 200,\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/auth/auth.controller.ts\n            \n            controller\n            AuthController\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/auth/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                66 %\n                (4/6)\n            \n        \n        \n            \n                \n                src/auth/jwt.strategy.ts\n            \n            injectable\n            JwtStrategy\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/dtos/login.dto.ts\n            \n            class\n            LoginDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/dtos/order.dto.ts\n            \n            class\n            OrderDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/dtos/product.dto.ts\n            \n            class\n            CreateDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/dtos/product.dto.ts\n            \n            class\n            UpdateDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/dtos/register.dto.ts\n            \n            class\n            RegisterDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/dtos/update-profile.dto.ts\n            \n            class\n            UpdateProfileDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/entities/auth-pass.entity.ts\n            \n            entity\n            AuthPass\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/entities/auth.entity.ts\n            \n            entity\n            AuthEntity\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/entities/orders.entity.ts\n            \n            entity\n            OrdersEntity\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/interface/response.model.ts\n            \n            class\n            ResponseModel\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/orders/orders.controller.ts\n            \n            controller\n            OrdersController\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/orders/orders.service.ts\n            \n            injectable\n            OrdersService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/product/product-microservice.controller.ts\n            \n            controller\n            ProductMicroController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/product/product.controller.ts\n            \n            controller\n            ProductController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/product/product.service.ts\n            \n            injectable\n            ProductService\n            \n                75 %\n                (6/8)\n            \n        \n        \n            \n                \n                src/schemas/product.model.ts\n            \n            class\n            Product\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/schemas/product.model.ts\n            \n            variable\n            ProductSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/user/user-microservice.controller.ts\n            \n            controller\n            UserMicroController\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/user/user.controller.ts\n            \n            controller\n            UserController\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/user/user.service.ts\n            \n            injectable\n            UserService\n            \n                0 %\n                (0/4)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @nestjs/common : ^9.0.0\n        \n            @nestjs/config : ^2.2.0\n        \n            @nestjs/core : ^9.0.0\n        \n            @nestjs/jwt : ^9.0.0\n        \n            @nestjs/mapped-types : *\n        \n            @nestjs/microservices : ^9.1.4\n        \n            @nestjs/mongoose : ^9.2.0\n        \n            @nestjs/passport : ^9.0.0\n        \n            @nestjs/platform-express : ^9.0.0\n        \n            @nestjs/swagger : ^6.1.2\n        \n            @nestjs/typeorm : ^9.0.1\n        \n            @types/cache-manager : ^4.0.2\n        \n            amqp-connection-manager : ^4.1.7\n        \n            amqplib : ^0.10.3\n        \n            bcrypt : ^5.1.0\n        \n            cache-manager : ^4.1.0\n        \n            cache-manager-redis-store : ^3.0.1\n        \n            class-transformer : ^0.5.1\n        \n            class-validator : ^0.13.2\n        \n            ioredis : ^5.2.4\n        \n            mongoose : ^6.6.5\n        \n            mysql2 : ^2.3.3\n        \n            passport : ^0.6.0\n        \n            passport-jwt : ^4.0.0\n        \n            passport-local : ^1.0.0\n        \n            pg : ^8.8.0\n        \n            reflect-metadata : ^0.1.13\n        \n            rimraf : ^3.0.2\n        \n            rxjs : ^7.2.0\n        \n            typeorm : ^0.3.11\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\n\n Microshop \n\nDescription\nShop api with Nest framework\nInstallation\n$ npm installRunning the app\n# development\n$ npm run start\n# watch mode\n$ npm run start:dev\n# production mode\n$ npm run start:prodTest\n# unit tests\n$ npm run test\n# e2e tests\n$ npm run test:e2e\n# test coverage\n$ npm run test:covContact Me\n\nAuthor - Mehran Shahbaz\nEmail - mehranfmpx@gmail.com\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        OrdersModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ProductModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UserModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_OrdersModule\n\n\n\ncluster_OrdersModule_providers\n\n\n\ncluster_ProductModule\n\n\n\ncluster_ProductModule_providers\n\n\n\ncluster_UserModule\n\n\n\ncluster_UserModule_providers\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nOrdersModule\n\nOrdersModule\n\nAppModule -->\n\nOrdersModule->AppModule\n\n\n\n\n\nProductModule\n\nProductModule\n\nAppModule -->\n\nProductModule->AppModule\n\n\n\n\n\nUserModule\n\nUserModule\n\nAppModule -->\n\nUserModule->AppModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\nOrdersService\n\nOrdersService\n\nOrdersModule -->\n\nOrdersService->OrdersModule\n\n\n\n\n\nProductService\n\nProductService\n\nProductModule -->\n\nProductService->ProductModule\n\n\n\n\n\nUserService\n\nUserService\n\nUserModule -->\n\nUserService->UserModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        5 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    6 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    3 Entities\n                \n            \n        \n        \n            \n                \n                    \n                    5 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    8 Classes\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.1\n        \n            Description : Shop api microservice\n        \n            License : UNLICENSED\n        \n            Author : Mehran Shahbaz\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ProductDocument   (src/.../product.model.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/schemas/product.model.ts\n    \n    \n        \n            \n                \n                    \n                    ProductDocument\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ProductSchema   (src/.../product.model.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/schemas/product.model.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ProductSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(Product)\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
